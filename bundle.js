(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>d});var i=t(15),r=t.n(i),o=t(645),a=t.n(o)()(r());a.push([n.id,"body{\n    background-color: #333333;\n    color: #eeeeee;\n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(241, 77, 77);\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,cAAc;AAClB;AACA;IACI,cAAc;IACd,aAAa;IACb,YAAY;IACZ,qBAAqB;AACzB;AACA;IACI,4CAA4C;IAC5C,6BAA6B;AACjC;AACA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,KAAK;IACL,SAAS;IACT,OAAO;IACP,OAAO;AACX;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,uBAAuB;IACvB,uBAAuB;AAC3B;AACA;IACI,WAAW;IACX,yBAAyB;IACzB,MAAM;IACN,WAAW;IACX,aAAa;IACb,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,uBAAuB;IACvB,uBAAuB;AAC3B;AACA;IACI,6BAA6B;AACjC;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB,WAAW;IACX,WAAW;IACX,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,oBAAoB;IACpB,yBAAyB;IACzB,iBAAiB;IACjB,OAAO;IACP,WAAW;IACX,YAAY;IACZ,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,yBAAyB;AAC7B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,gBAAgB;IAChB,sBAAsB;AAC1B;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,WAAW;IACX,oBAAoB;IACpB,eAAe;AACnB;AACA;IACI,SAAS;AACb;AACA;IACI,UAAU;IACV,YAAY;IACZ,cAAc;IACd,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,oBAAoB;IACpB,eAAe;AACnB;AACA;IACI,YAAY;IACZ,sBAAsB;AAC1B;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,UAAU;AACd;AACA;IACI,sBAAsB;IACtB,eAAe;IACf,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,mBAAmB;GACpB,oBAAoB;AACvB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,UAAU;IACV,YAAY;IACZ,UAAU;IACV,kCAAkC;IAClC,kBAAkB;IAClB,YAAY;IACZ;AACJ",sourcesContent:["body{\n    background-color: #333333;\n    color: #eeeeee;\n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(241, 77, 77);\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}"],sourceRoot:""}]);const d=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,i){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(i)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(r[a]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);i&&r[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),e.push(c))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}n.exports=function(n){var t,i,r=(i=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var i,r,o=[],a=!0,d=!1;try{for(t=t.call(n);!(a=(i=t.next()).done)&&(o.push(i.value),!e||o.length!==e);a=!0);}catch(n){d=!0,r=n}finally{try{a||null==t.return||t.return()}finally{if(d)throw r}}return o}}(t,i)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var i=Object.prototype.toString.call(n).slice(8,-1);return"Object"===i&&n.constructor&&(i=n.constructor.name),"Map"===i||"Set"===i?Array.from(n):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?e(n,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[1],a=r[3];if("function"==typeof btoa){var d=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),l="/*# ".concat(c," */"),A=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[o].concat(A).concat([l]).join("\n")}return[o].join("\n")}},695:n=>{var e={};n.exports=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}},379:n=>{var e=[];function t(n){for(var t=-1,i=0;i<e.length;i++)if(e[i].identifier===n){t=i;break}return t}function i(n,i){for(var o={},a=[],d=0;d<n.length;d++){var c=n[d],l=i.base?c[0]+i.base:c[0],A=o[l]||0,s="".concat(l," ").concat(A);o[l]=A+1;var p=t(s),u={css:c[1],media:c[2],sourceMap:c[3]};-1!==p?(e[p].references++,e[p].updater(u)):e.push({identifier:s,updater:r(u,i),references:1}),a.push(s)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=i(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<o.length;a++){var d=t(o[a]);e[d].references--}for(var c=i(n,r),l=0;l<o.length;l++){var A=t(o[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=c}}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var i=t.css,r=t.media,o=t.sourceMap;r?n.setAttribute("media",r):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},240:(n,e,t)=>{n.exports=t.p+"04c81ef01b7098abe8f1.png"},708:(n,e,t)=>{n.exports=t.p+"c952d52ab05717580cce.png"},242:(n,e,t)=>{n.exports=t.p+"5dac6acafe3e119da3ab.png"},59:(n,e,t)=>{n.exports=t.p+"75bd2749b182623e35b3.png"}},e={};function t(i){var r=e[i];if(void 0!==r)return r.exports;var o=e[i]={id:i,exports:{}};return n[i](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var i in e)t.o(e,i)&&!t.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:e[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var i=e.getElementsByTagName("script");i.length&&(n=i[i.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),i=t(795),r=t.n(i),o=t(695),a=t.n(o),d=t(216),c=t.n(d),l=t(426),A={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=a()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};A.domAPI=r(),A.insertStyleElement=c(),e()(l.Z,A),l.Z&&l.Z.locals&&l.Z.locals;var s=t(242),p=t(240),u=t(59),m=t(708);let f,C,h=function(){let n=[{title:"TheOdinProject",description:"Learn Web Development",tasks:[{title:"Create To-Do-List",date:"dd/mm/yyyy",detail:"Create using Javascript and Date-fns",time:"13:01"}]}],e=function(){return function(n){var e;try{e=window.localStorage;var t="__storage_test__";return e.setItem(t,t),e.removeItem(t),!0}catch(n){return n instanceof DOMException&&(22===n.code||1014===n.code||"QuotaExceededError"===n.name||"NS_ERROR_DOM_QUOTA_REACHED"===n.name)&&e&&0!==e.length}}()?1:0};if(1==e){let t=JSON.parse(e.getItem("projectArray"));return 0!=t.length?t:n}return n}();function B(){const n=document.getElementsByTagName("BODY")[0],e=document.createElement("div");e.id="wrapper";const t=function(n){const e=document.createElement("div");e.id="leftPane",e.innerHTML="";const t=document.createElement("div");t.classList.add("flexEnd");const i=document.createElement("div");i.innerText="Home";const r=document.createElement("div");r.innerText="0",t.appendChild(i),t.appendChild(r),e.appendChild(t);const o=document.createElement("div");o.classList.add("flexEnd");const a=document.createElement("div");a.innerText="Today";const d=document.createElement("div");d.innerText="0",o.appendChild(a),o.appendChild(d),e.appendChild(o);const c=document.createElement("div");c.classList.add("flexEnd");const l=document.createElement("div");l.innerText="This Week";const A=document.createElement("div");A.innerText="0",c.appendChild(l),c.appendChild(A),e.appendChild(c);const u=document.createElement("div");u.classList.add("flexColumn"),u.id="projectDisplay";const h=document.createElement("div");h.classList.add("flexEnd");const B=document.createElement("div");B.innerText="Projects";const g=document.createElement("div");g.classList.add("flexRow");const I=document.createElement("div");I.innerText="0";const x=new Image;x.src=s,x.addEventListener("click",(()=>{u.classList.toggle("hidden")})),x.classList.add("enclosedIMG"),h.appendChild(B),g.appendChild(I),g.appendChild(x),h.appendChild(g),e.appendChild(h);const v=document.createElement("div");v.classList.add("flexEnd");const b=document.createElement("div");b.innerText="Add Project";const y=new Image;y.src=p,y.classList.add("enclosedIMG"),v.appendChild(b),v.appendChild(y);const w=function(n){const e=document.createElement("div");e.classList.add("flexColumn");for(let t=0;t<n.length;t++){let i=n[t];const r=document.createElement("div");r.classList.add("flexEnd"),r.id=`project${t}`;const o=document.createElement("div");o.innerText=`${i.title}`;const a=new Image;a.classList.add("enclosedIMG"),a.src=m,a.addEventListener("click",(()=>{event.stopPropagation(),deleteproject(t)})),0==t&&(f=n[t],C=t),r.addEventListener("click",(()=>{f=n[t],C=t})),r.appendChild(o),r.appendChild(a),e.appendChild(r)}return e}(n);return u.appendChild(v),u.appendChild(w),e.appendChild(u),e}(h);e.appendChild(t);const i=function(n){console.log(n);const e=document.createElement("div");e.id="rightPane",e.innerHTML="";const t=document.createElement("div");t.classList.add("flexColumn");const i=document.createElement("div");i.classList.add("flexStretch");const r=document.createElement("h1");r.innerText=`${n.title}`,r.id="projectTitle",i.appendChild(r);const o=new Image;o.src=u,o.classList.add("enclosedIMG"),i.appendChild(o),t.appendChild(i);const a=document.createElement("p");a.innerText=`${n.description}`,a.id="projectDescription",t.appendChild(a),e.appendChild(t);const d=function(n){const e=document.createElement("div");e.id="taskContainer";const t=document.createElement("button");t.innerText="Add Task",t.id="addTaskBtn",t.addEventListener("click",(()=>{addNewTask()})),e.appendChild(t);for(let t=0;t<n.length;t++){let i=n[t];const r=document.createElement("div");r.classList.add("individualTaskContainer"),r.id=`task${t}`;const o=document.createElement("div");o.classList.add("flexStretch"),o.id=`${t}`;const a=document.createElement("h2");a.innerText=`${i.title}`,a.classList.add("taskName");const d=new Image;d.src=u,d.id=`${t}`,d.classList.add("enclosedIMG"),d.addEventListener("click",(()=>{I(t)}));const c=document.createElement("div");c.classList.add("flexAround");const l=new Image;l.src=m,l.id=`${t};`,l.classList.add("enclosedIMG"),l.addEventListener("click",(()=>{g(t)}));const A=document.createElement("div");A.classList.add("time"),A.innerText=`${i.time}`;const s=document.createElement("div");s.classList.add("date"),s.innerText=`${i.date}`,c.appendChild(A),c.appendChild(s),c.appendChild(d),c.appendChild(l),o.appendChild(a),o.appendChild(c),r.appendChild(o);const p=document.createElement("p");p.innerText=`${i.detail}`,p.classList.add("taskDetail"),r.appendChild(p),e.appendChild(r)}return e}(n.tasks);return e.appendChild(d),e}(f);e.appendChild(i),n.appendChild(e)}function g(n){var e;h[C].tasks.splice(n,1),e=h,localStorage.clear(),localStorage.setItem("projectArray",JSON.stringify(e)),console.log(e),B()}function I(n){const e=document.getElementById(`task${n}`);e.innerHTML="",e.classList.remove("individualTaskContainer"),e.classList.add("editTaskContainer");const t=document.createElement("form");t.classList.add("editTaskContainer"),t.id=`taskedit${n}`;const i=document.createElement("div");i.classList.add("flexStretch");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("placeholder","Task Name"),r.classList.add("inputText"),r.required=!0;const o=document.createElement("input");o.setAttribute("type","submit"),o.id="taskSubmit",o.innerText="Submit",o.addEventListener("click",(()=>{}));const a=document.createElement("div");a.classList.add("flexAround");const d=document.createElement("input");d.setAttribute("type","time"),d.classList.add("time"),d.required=!0;const c=document.createElement("input");c.setAttribute("type","date"),c.classList.add("date"),c.required=!0,a.appendChild(d),a.appendChild(c),a.appendChild(o),i.appendChild(r),i.appendChild(a),e.appendChild(i);const l=document.createElement("input");l.setAttribute("type","text"),l.required=!0,l.classList.add("taskDetail"),t.appendChild(l),e.appendChild(t)}B()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,