(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var i=t(15),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([e.id,"body{\n    background-color: #333333;\n    color: #eeeeee;\n}\ninput{\n    background-color: #000000;\n    color: whitesmoke;\n    border-radius: 2px;\n    border: none;\n    outline: 2px grey solid;\n    min-height: 2rem;\n}\ninput[type = 'submit']{\n    background-color: rgb(46, 156, 46) !important;\n    \n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 5%;\n    margin-top:2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(105, 100, 100);\n    color: whitesmoke;\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}\n.blurLayer{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0,0,0,0.8);\n        z-index: 2;\n        cursor:default;\n}\n#addLayer{\n    z-index: 5;\n    position: absolute;\n    cursor: default;\n    width: 50rem;\n    height: 50rem;\n    min-height: 700px;\n    margin: 0 auto;\n    background-color:#d6e0f0;\n    border-radius: 50px;\n    top: 50%;\n    left: 50%;\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.sub input{\n    text-align: center;\n    border-radius: 20px;\n    background-color: black;\n    color: white;\n    font-size: 2rem;\n    outline: 2px grey solid;\n    -webkit-appearance: none;\n    margin: 0;\n    -moz-appearance: textfield;\n}\n.sub{\n    height: 75%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: repeat( 6, 1fr);\n    grid-gap: 1rem;\n    padding: 10%;\n    text-align: center;\n    font-size: 2rem;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body{\n    background-color: #333333;\n    color: #eeeeee;\n}\ninput{\n    background-color: #000000;\n    color: whitesmoke;\n    border-radius: 2px;\n    border: none;\n    outline: 2px grey solid;\n    min-height: 2rem;\n}\ninput[type = 'submit']{\n    background-color: rgb(46, 156, 46) !important;\n    \n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 5%;\n    margin-top:2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(105, 100, 100);\n    color: whitesmoke;\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}\n.blurLayer{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0,0,0,0.8);\n        z-index: 2;\n        cursor:default;\n}\n#addLayer{\n    z-index: 5;\n    position: absolute;\n    cursor: default;\n    width: 50rem;\n    height: 50rem;\n    min-height: 700px;\n    margin: 0 auto;\n    background-color:#d6e0f0;\n    border-radius: 50px;\n    top: 50%;\n    left: 50%;\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.sub input{\n    text-align: center;\n    border-radius: 20px;\n    background-color: black;\n    color: white;\n    font-size: 2rem;\n    outline: 2px grey solid;\n    -webkit-appearance: none;\n    margin: 0;\n    -moz-appearance: textfield;\n}\n.sub{\n    height: 75%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: repeat( 6, 1fr);\n    grid-gap: 1rem;\n    padding: 10%;\n    text-align: center;\n    font-size: 2rem;\n}\n"],sourceRoot:""}]);const d=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,i){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(i)for(var r=0;r<this.length;r++){var o=this[r][0];null!=o&&(a[o]=!0)}for(var d=0;d<e.length;d++){var s=[].concat(e[d]);i&&a[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),n.push(s))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}e.exports=function(e){var t,i,a=(i=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=t){var i,a,r=[],o=!0,d=!1;try{for(t=t.call(e);!(o=(i=t.next()).done)&&(r.push(i.value),!n||r.length!==n);o=!0);}catch(e){d=!0,a=e}finally{try{o||null==t.return||t.return()}finally{if(d)throw a}}return r}}(t,i)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?n(e,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=a[1],o=a[3];if("function"==typeof btoa){var d=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),l="/*# ".concat(s," */"),c=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[r].concat(c).concat([l]).join("\n")}return[r].join("\n")}},695:e=>{var n={};e.exports=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var r={},o=[],d=0;d<e.length;d++){var s=e[d],l=i.base?s[0]+i.base:s[0],c=r[l]||0,A="".concat(l," ").concat(c);r[l]=c+1;var u=t(A),p={css:s[1],media:s[2],sourceMap:s[3]};-1!==u?(n[u].references++,n[u].updater(p)):n.push({identifier:A,updater:a(p,i),references:1}),o.push(A)}return o}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=i(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var d=t(r[o]);n[d].references--}for(var s=i(e,a),l=0;l<r.length;l++){var c=t(r[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}r=s}}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i=t.css,a=t.media,r=t.sourceMap;a?e.setAttribute("media",a):e.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(i,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},240:(e,n,t)=>{e.exports=t.p+"04c81ef01b7098abe8f1.png"},708:(e,n,t)=>{e.exports=t.p+"c952d52ab05717580cce.png"},242:(e,n,t)=>{e.exports=t.p+"5dac6acafe3e119da3ab.png"},59:(e,n,t)=>{e.exports=t.p+"75bd2749b182623e35b3.png"}},n={};function t(i){var a=n[i];if(void 0!==a)return a.exports;var r=n[i]={id:i,exports:{}};return e[i](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(379),n=t.n(e),i=t(795),a=t.n(i),r=t(695),o=t.n(r),d=t(216),s=t.n(d),l=t(426),c={styleTagTransform:function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}},setAttributes:function(e){var n=t.nc;n&&e.setAttribute("nonce",n)},insert:function(e){var n=o()("head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(e)}};c.domAPI=a(),c.insertStyleElement=s(),n()(l.Z,c),l.Z&&l.Z.locals&&l.Z.locals;var A=t(242),u=t(240),p=t(59),m=t(708);let C,f=0,h=[];function B(e,n){this.title=e,this.description=n,this.tasks=[{date:"dd/mm/yyyy",detail:"It is a Sample task",time:"11:01",taskTitle:"Sample Task"}]}function g(e,n,t,i){this.taskTitle=e,this.detail=n,this.date=t,this.time=i}function I(){const e=document.getElementsByTagName("BODY")[0];e.innerHTML="";const n=document.createElement("div");n.id="wrapper";const t=function(e){let n=e.length;const t=document.createElement("div");t.id="leftPane",t.innerHTML="";const i=document.createElement("div");i.classList.add("flexEnd");const a=document.createElement("div");a.innerText="Today";const r=document.createElement("div");r.innerText="0",i.appendChild(a),i.appendChild(r),t.appendChild(i);const o=document.createElement("div");o.classList.add("flexEnd");const d=document.createElement("div");d.innerText="This Week";const s=document.createElement("div");s.innerText="0",o.appendChild(d),o.appendChild(s),t.appendChild(o);const l=document.createElement("div");l.classList.add("flexColumn"),l.id="projectDisplay";const c=document.createElement("div");c.classList.add("flexEnd");const p=document.createElement("div");p.innerText="Projects";const h=document.createElement("div");h.classList.add("flexRow");const B=document.createElement("div");B.innerText=`${n}`;const g=new Image;g.src=A,g.addEventListener("click",(()=>{l.classList.toggle("hidden")})),g.classList.add("enclosedIMG"),c.appendChild(p),h.appendChild(B),h.appendChild(g),c.appendChild(h),t.appendChild(c);const b=document.createElement("div");b.addEventListener("click",(()=>{y()})),b.classList.add("flexEnd");const v=document.createElement("div");v.innerText="Add Project";const k=new Image;k.src=u,k.classList.add("enclosedIMG"),b.appendChild(v),b.appendChild(k);const w=function(e){const n=document.createElement("div");if(n.classList.add("flexColumn"),0!=e.length){for(let t=0;t<e.length;t++){let i=e[t];const a=document.createElement("div");a.classList.add("flexEnd"),a.id=`project${t}`;const r=document.createElement("div");r.innerText=`${i.title}`;const o=new Image;o.classList.add("enclosedIMG"),o.src=m,o.addEventListener("click",(()=>{event.stopPropagation(),x(t)})),0==f&&(f=e[t],C=t),a.addEventListener("click",(()=>{f=e[t],C=t,I()})),a.appendChild(r),a.appendChild(o),n.appendChild(a)}return n}}(e);return l.appendChild(b),l.appendChild(w),t.appendChild(l),t}(h);n.appendChild(t);const i=function(e){const n=document.createElement("div");n.id="rightPane",n.innerHTML="";const t=document.createElement("div");t.classList.add("flexColumn");const i=document.createElement("div");i.classList.add("flexStretch");const a=document.createElement("h1");a.innerText=`${e.title}`,a.id="projectTitle",i.appendChild(a);const r=new Image;f=={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]}||f=={title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}?r.classList.add("hidden"):r.classList.remove("hidden"),r.src=p,r.classList.add("enclosedIMG"),r.addEventListener("click",(()=>{!function(e){const n=document.createElement("div");n.classList.add("blurLayer"),n.addEventListener("click",(()=>{n.classList.add("hidden"),t.classList.add("hidden")}));const t=document.createElement("div");t.id="addLayer";const i=document.createElement("form");i.classList.add("sub");const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("placeholder",`${h[e].title}`),a.required=!0;const r=document.createElement("input");r.required=!0,r.setAttribute("type","text"),r.setAttribute("placeholder",`${h[e].description}`);const o=document.createElement("input");o.setAttribute("type","submit"),o.setAttribute("placeholder","Edit Project"),o.addEventListener("click",(()=>{event.preventDefault(),""===a.value||""===r.value||(h[e].title=a.value,h[e].description=r.value,n.remove(),t.remove(),I())})),i.appendChild(a),i.appendChild(r),i.appendChild(o),t.appendChild(i);const d=document.getElementsByTagName("BODY")[0];d.appendChild(n),d.appendChild(t)}(C)})),i.appendChild(r),t.appendChild(i);const o=document.createElement("p");o.innerText=`${e.description}`,o.id="projectDescription",t.appendChild(o),n.appendChild(t);const d=function(e){const n=document.createElement("div");n.id="taskContainer";const t=document.createElement("button");t.innerText="Add Task",f=={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]}||f=={title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}?t.classList.add("hidden"):t.classList.remove("hidden"),t.id="addTaskBtn",t.addEventListener("click",(()=>{!function(e){const n=document.createElement("form");n.id=`${e.length}`,n.classList.remove("individualTaskContainer"),n.classList.add("editTaskContainer");const t=document.createElement("form");t.classList.add("editTaskContainer");const i=document.createElement("div");i.classList.add("flexStretch");const a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("placeholder","Name of Task"),a.classList.add("inputText"),a.required=!0;const r=document.createElement("input");r.setAttribute("type","submit"),r.setAttribute("value","Submit"),r.id="taskSubmit",r.addEventListener("click",(()=>{if(""==a.value||""==c.value||""==s.value||""==l.value);else{const e=new g(a.value,c.value,l.value,l.value);console.log(e),h[C].tasks.push(e),I()}}));const o=document.createElement("button");o.innerText="Cancel",o.addEventListener("click",(()=>{n.remove()}));const d=document.createElement("div");d.classList.add("flexAround");const s=document.createElement("input");s.setAttribute("type","time"),s.setAttribute("value","hh:mm AM"),s.classList.add("time"),s.required=!0;const l=document.createElement("input");l.setAttribute("type","date"),l.setAttribute("value","01/01/2021"),l.classList.add("date"),l.required=!0,d.appendChild(s),d.appendChild(l),d.appendChild(r),i.appendChild(a),i.appendChild(d),n.appendChild(i);const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("value","Details of The Task"),c.required=!0,c.classList.add("taskDetail"),c.style.width="50%",t.appendChild(c),t.appendChild(o),t.classList.add("flexAround"),t.style.width="90% !important",n.appendChild(t),document.getElementById("taskContainer").appendChild(n)}(e)})),n.appendChild(t);for(let t=0;t<e.length;t++){let i=e[t];const a=document.createElement("div");a.classList.add("individualTaskContainer"),a.id=`task${t}`;const r=document.createElement("div");r.classList.add("flexStretch"),r.id=`${t}`;const o=document.createElement("h2");o.innerText=`${i.taskTitle}`,o.classList.add("taskName");const d=new Image;d.src=p,d.id=`${t}`,d.classList.add("enclosedIMG"),d.addEventListener("click",(()=>{v(t)}));const s=document.createElement("div");s.classList.add("flexAround");const l=new Image;l.src=m,l.id=`${t};`,l.classList.add("enclosedIMG"),l.addEventListener("click",(()=>{b(t)}));const c=document.createElement("div");c.classList.add("time"),c.innerText=`${i.time}`;const A=document.createElement("div");A.classList.add("date"),A.innerText=`${i.date}`,s.appendChild(c),s.appendChild(A),s.appendChild(d),s.appendChild(l),r.appendChild(o),r.appendChild(s),a.appendChild(r);const u=document.createElement("p");u.innerText=`${i.detail}`,u.classList.add("taskDetail"),a.appendChild(u),n.appendChild(a)}return n}(e.tasks);return n.appendChild(d),n}(f);var a;n.appendChild(i),e.appendChild(n),a=h,localStorage.clear(),localStorage.setItem("projectArray",JSON.stringify(a))}function b(e){h[C].tasks.splice(e,1),I()}function v(e){const n=h[C].tasks[e],t=document.getElementById(`task${e}`);t.innerHTML="",t.classList.remove("individualTaskContainer"),t.classList.add("editTaskContainer");const i=document.createElement("form");i.classList.add("editTaskContainer"),i.id=`taskedit${e}`;const a=document.createElement("div");a.classList.add("flexStretch");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("value",`${n.taskTitle}`),r.classList.add("inputText"),r.required=!0;const o=document.createElement("input");o.setAttribute("type","submit"),o.setAttribute("value","Submit"),o.id="taskSubmit",o.addEventListener("click",(()=>{""==r.value||""==c.value||""==s.value||""==l||(h[C].tasks[e].taskTitle=r.value,h[C].tasks[e].date=l.value,h[C].tasks[e].time=s.value,h[C].tasks[e].detail=c.value,I())}));const d=document.createElement("div");d.classList.add("flexAround");const s=document.createElement("input");s.setAttribute("type","time"),s.setAttribute("value",`${n.time}`),s.classList.add("time"),s.required=!0;const l=document.createElement("input");l.setAttribute("type","date"),l.setAttribute("value",`${n.date}`),l.classList.add("date"),l.required=!0,d.appendChild(s),d.appendChild(l),d.appendChild(o),a.appendChild(r),a.appendChild(d),t.appendChild(a);const c=document.createElement("input");c.setAttribute("type","text"),c.setAttribute("value",`${n.detail}`),c.required=!0,c.classList.add("taskDetail"),i.appendChild(c),t.appendChild(i)}function x(e){h.splice(e,1),0==h.length?y():(f={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]},I())}function y(){const e=document.createElement("div");e.classList.add("blurLayer"),e.addEventListener("click",(()=>{e.remove(),n.remove()}));const n=document.createElement("div");n.id="addLayer";const t=document.createElement("form");t.classList.add("sub");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("placeholder","Name"),i.required=!0;const a=document.createElement("input");a.required=!0,a.setAttribute("type","text"),a.setAttribute("placeholder","Describe the project");const r=document.createElement("input");r.setAttribute("type","submit"),r.setAttribute("value","Add Project"),r.addEventListener("click",(()=>{if(event.preventDefault(),""==i.value||""==a.value);else{let t=new B(i.value,a.value);h.push(t),e.remove(),n.remove(),I()}})),t.appendChild(i),t.appendChild(a),t.appendChild(r),n.appendChild(t);const o=document.getElementsByTagName("BODY")[0];o.appendChild(e),o.appendChild(n)}h=function(){if(function(e){var n;try{n=window.localStorage;var t="__storage_test__";return n.setItem(t,t),n.removeItem(t),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&n&&0!==n.length}}()){return JSON.parse(localStorage.getItem("projectArray"))||[{title:"TheOdinProject",description:"Learn Web Development",tasks:[{taskTitle:"Create To-Do-List",date:"01/01/2021",detail:"Create using Javascript and Date-fns",time:"11:01"}]}]}return[{title:"TheOdinProject",description:"Learn Web Development",tasks:[{title:"Create To-Do-List",date:"dd/mm/yyyy",detail:"Create using Javascript and Date-fns",time:"13:01"}]}]}(),I()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,