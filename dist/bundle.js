(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var i=t(15),r=t.n(i),a=t(645),o=t.n(a)()(r());o.push([e.id,"body{\n    background-color: #333333;\n    color: #eeeeee;\n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(105, 100, 100);\n    color: whitesmoke;\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}\n.blurLayer{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0,0,0,0.8);\n        z-index: 2;\n        cursor:default;\n}\n#addLayer{\n    z-index: 5;\n    position: absolute;\n    cursor: default;\n    width: 50rem;\n    height: 50rem;\n    min-height: 700px;\n    margin: 0 auto;\n    background-color:#d6e0f0;\n    border-radius: 50px;\n    top: 50%;\n    left: 50%;\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.sub input{\n    text-align: center;\n    border-radius: 20px;\n    background-color: black;\n    color: white;\n    font-size: 2rem;\n    outline: 2px grey solid;\n    -webkit-appearance: none;\n    margin: 0;\n    -moz-appearance: textfield;\n}\n.sub{\n    height: 75%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: repeat( 6, 1fr);\n    grid-gap: 1rem;\n    padding: 10%;\n    text-align: center;\n    font-size: 2rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,cAAc;AAClB;AACA;IACI,cAAc;IACd,aAAa;IACb,YAAY;IACZ,qBAAqB;AACzB;AACA;IACI,4CAA4C;IAC5C,6BAA6B;AACjC;AACA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,KAAK;IACL,SAAS;IACT,OAAO;IACP,OAAO;AACX;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,uBAAuB;IACvB,uBAAuB;AAC3B;AACA;IACI,WAAW;IACX,yBAAyB;IACzB,MAAM;IACN,WAAW;IACX,aAAa;IACb,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,uBAAuB;IACvB,uBAAuB;AAC3B;AACA;IACI,6BAA6B;AACjC;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB,WAAW;IACX,WAAW;IACX,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,oBAAoB;IACpB,yBAAyB;IACzB,iBAAiB;IACjB,OAAO;IACP,WAAW;IACX,YAAY;IACZ,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,yBAAyB;AAC7B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,gBAAgB;IAChB,sBAAsB;AAC1B;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,WAAW;IACX,oBAAoB;IACpB,eAAe;AACnB;AACA;IACI,SAAS;AACb;AACA;IACI,UAAU;IACV,YAAY;IACZ,cAAc;IACd,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,oBAAoB;IACpB,eAAe;AACnB;AACA;IACI,YAAY;IACZ,sBAAsB;AAC1B;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,UAAU;AACd;AACA;IACI,sBAAsB;IACtB,eAAe;IACf,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,mBAAmB;GACpB,oBAAoB;AACvB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,UAAU;IACV,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;IACZ;AACJ;AACA;QACQ,eAAe;QACf,WAAW;QACX,YAAY;QACZ,MAAM;QACN,OAAO;QACP,QAAQ;QACR,SAAS;QACT,iCAAiC;QACjC,UAAU;QACV,cAAc;AACtB;AACA;IACI,UAAU;IACV,kBAAkB;IAClB,eAAe;IACf,YAAY;IACZ,aAAa;IACb,iBAAiB;IACjB,cAAc;IACd,wBAAwB;IACxB,mBAAmB;IACnB,QAAQ;IACR,SAAS;IACT,iDAAiD;IACjD,oDAAoD;IACpD,4CAA4C;AAChD;AACA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,eAAe;IACf,uBAAuB;IACvB,wBAAwB;IACxB,SAAS;IACT,0BAA0B;AAC9B;AACA;IACI,WAAW;IACX,cAAc;IACd,aAAa;IACb,mCAAmC;IACnC,cAAc;IACd,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB",sourcesContent:["body{\n    background-color: #333333;\n    color: #eeeeee;\n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(105, 100, 100);\n    color: whitesmoke;\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}\n.blurLayer{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0,0,0,0.8);\n        z-index: 2;\n        cursor:default;\n}\n#addLayer{\n    z-index: 5;\n    position: absolute;\n    cursor: default;\n    width: 50rem;\n    height: 50rem;\n    min-height: 700px;\n    margin: 0 auto;\n    background-color:#d6e0f0;\n    border-radius: 50px;\n    top: 50%;\n    left: 50%;\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.sub input{\n    text-align: center;\n    border-radius: 20px;\n    background-color: black;\n    color: white;\n    font-size: 2rem;\n    outline: 2px grey solid;\n    -webkit-appearance: none;\n    margin: 0;\n    -moz-appearance: textfield;\n}\n.sub{\n    height: 75%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: repeat( 6, 1fr);\n    grid-gap: 1rem;\n    padding: 10%;\n    text-align: center;\n    font-size: 2rem;\n}"],sourceRoot:""}]);const d=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,i){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(i)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(r[o]=!0)}for(var d=0;d<e.length;d++){var c=[].concat(e[d]);i&&r[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),n.push(c))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}e.exports=function(e){var t,i,r=(i=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=t){var i,r,a=[],o=!0,d=!1;try{for(t=t.call(e);!(o=(i=t.next()).done)&&(a.push(i.value),!n||a.length!==n);o=!0);}catch(e){d=!0,r=e}finally{try{o||null==t.return||t.return()}finally{if(d)throw r}}return a}}(t,i)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?n(e,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],o=r[3];if("function"==typeof btoa){var d=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),l="/*# ".concat(c," */"),s=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[a].concat(s).concat([l]).join("\n")}return[a].join("\n")}},695:e=>{var n={};e.exports=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var a={},o=[],d=0;d<e.length;d++){var c=e[d],l=i.base?c[0]+i.base:c[0],s=a[l]||0,A="".concat(l," ").concat(s);a[l]=s+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3]};-1!==p?(n[p].references++,n[p].updater(u)):n.push({identifier:A,updater:r(u,i),references:1}),o.push(A)}return o}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=i(e=e||[],r=r||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var d=t(a[o]);n[d].references--}for(var c=i(e,r),l=0;l<a.length;l++){var s=t(a[l]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=c}}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i=t.css,r=t.media,a=t.sourceMap;r?e.setAttribute("media",r):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(i,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},240:(e,n,t)=>{e.exports=t.p+"04c81ef01b7098abe8f1.png"},708:(e,n,t)=>{e.exports=t.p+"c952d52ab05717580cce.png"},242:(e,n,t)=>{e.exports=t.p+"5dac6acafe3e119da3ab.png"},59:(e,n,t)=>{e.exports=t.p+"75bd2749b182623e35b3.png"}},n={};function t(i){var r=n[i];if(void 0!==r)return r.exports;var a=n[i]={id:i,exports:{}};return e[i](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(379),n=t.n(e),i=t(795),r=t.n(i),a=t(695),o=t.n(a),d=t(216),c=t.n(d),l=t(426),s={styleTagTransform:function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}},setAttributes:function(e){var n=t.nc;n&&e.setAttribute("nonce",n)},insert:function(e){var n=o()("head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(e)}};s.domAPI=r(),s.insertStyleElement=c(),n()(l.Z,s),l.Z&&l.Z.locals&&l.Z.locals;var A=t(242),p=t(240),u=t(59),m=t(708);let C,f=0,h=[];function B(e,n){this.title=e,this.description=n,this.tasks=[{date:"dd/mm/yyyy",detail:"It is a Sample task",time:"13:01",taskTitle:"Sample Task"}]}function g(){const e=document.getElementsByTagName("BODY")[0],n=document.createElement("div");n.id="wrapper";const t=function(e){let n=e.length;const t=document.createElement("div");t.id="leftPane",t.innerHTML="";const i=document.createElement("div");i.classList.add("flexEnd");const r=document.createElement("div");r.innerText="Home";const a=document.createElement("div");a.innerText="0",i.appendChild(r),i.appendChild(a),t.appendChild(i);const o=document.createElement("div");o.classList.add("flexEnd");const d=document.createElement("div");d.innerText="Today";const c=document.createElement("div");c.innerText="0",o.appendChild(d),o.appendChild(c),t.appendChild(o);const l=document.createElement("div");l.classList.add("flexEnd");const s=document.createElement("div");s.innerText="This Week";const u=document.createElement("div");u.innerText="0",l.appendChild(s),l.appendChild(u),t.appendChild(l);const I=document.createElement("div");I.classList.add("flexColumn"),I.id="projectDisplay";const x=document.createElement("div");x.classList.add("flexEnd");const v=document.createElement("div");v.innerText="Projects";const y=document.createElement("div");y.classList.add("flexRow");const w=document.createElement("div");w.innerText=`${n}`;const k=new Image;k.src=A,k.addEventListener("click",(()=>{I.classList.toggle("hidden")})),k.classList.add("enclosedIMG"),x.appendChild(v),y.appendChild(w),y.appendChild(k),x.appendChild(y),t.appendChild(x);const E=document.createElement("div");E.addEventListener("click",(()=>{!function(){const e=document.createElement("div");e.classList.add("blurLayer"),e.addEventListener("click",(()=>{e.remove(),n.remove()}));const n=document.createElement("div");n.id="addLayer";const t=document.createElement("form");t.classList.add("sub");const i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("placeholder","Name"),i.required=!0;const r=document.createElement("input");r.required=!0,r.setAttribute("type","text"),r.setAttribute("placeholder","Describe the project");const a=document.createElement("input");a.setAttribute("type","submit"),a.setAttribute("text","Add Project"),a.style.cssText="background-color: gold;",a.addEventListener("click",(()=>{if(event.preventDefault(),""==i.value||""==r.value);else{let t=new B(i.value,r.value);h.push(t),e.remove(),n.remove(),g()}})),t.appendChild(i),t.appendChild(r),t.appendChild(a),n.appendChild(t);const o=document.getElementsByTagName("BODY")[0];o.appendChild(e),o.appendChild(n)}()})),E.classList.add("flexEnd");const L=document.createElement("div");L.innerText="Add Project";const j=new Image;j.src=p,j.classList.add("enclosedIMG"),E.appendChild(L),E.appendChild(j);const T=function(e){const n=document.createElement("div");if(n.classList.add("flexColumn"),0!=e.length){for(let t=0;t<e.length;t++){let i=e[t];const r=document.createElement("div");r.classList.add("flexEnd"),r.id=`project${t}`;const a=document.createElement("div");a.innerText=`${i.title}`;const o=new Image;o.classList.add("enclosedIMG"),o.src=m,o.addEventListener("click",(()=>{event.stopPropagation(),b(t)})),0==f&&(f=e[t],C=t),r.addEventListener("click",(()=>{f=e[t],C=t,g()})),r.appendChild(a),r.appendChild(o),n.appendChild(r)}return n}}(e);return I.appendChild(E),I.appendChild(T),t.appendChild(I),t}(h);n.appendChild(t);const i=function(e){const n=document.createElement("div");n.id="rightPane",n.innerHTML="";const t=document.createElement("div");t.classList.add("flexColumn");const i=document.createElement("div");i.classList.add("flexStretch");const r=document.createElement("h1");r.innerText=`${e.title}`,r.id="projectTitle",i.appendChild(r);const a=new Image;f=={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]}||f=={title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}?a.classList.add("hidden"):a.classList.remove("hidden"),a.src=u,a.classList.add("enclosedIMG"),a.addEventListener("click",(()=>{!function(e){const n=document.createElement("div");n.classList.add("blurLayer"),n.addEventListener("click",(()=>{n.classList.add("hidden"),t.classList.add("hidden")}));const t=document.createElement("div");t.id="addLayer";const i=document.createElement("form");i.classList.add("sub");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("placeholder",`${h[e].title}`),r.required=!0;const a=document.createElement("input");a.required=!0,a.setAttribute("type","text"),a.setAttribute("placeholder",`${h[e].description}`);const o=document.createElement("input");o.setAttribute("type","submit"),o.setAttribute("placeholder","Edit Project"),o.style.cssText="background-color: gold;",o.addEventListener("click",(()=>{event.preventDefault(),""===r.value||""===a.value||(h[e].title=r.value,h[e].description=a.value,n.remove(),t.remove(),g())})),i.appendChild(r),i.appendChild(a),i.appendChild(o),t.appendChild(i);const d=document.getElementsByTagName("BODY")[0];d.appendChild(n),d.appendChild(t)}(C)})),i.appendChild(a),t.appendChild(i);const o=document.createElement("p");o.innerText=`${e.description}`,o.id="projectDescription",t.appendChild(o),n.appendChild(t);const d=function(e){const n=document.createElement("div");n.id="taskContainer";const t=document.createElement("button");t.innerText="Add Task",f=={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]}||f=={title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}?t.classList.add("hidden"):t.classList.remove("hidden"),t.id="addTaskBtn",t.addEventListener("click",(()=>{})),n.appendChild(t);for(let t=0;t<e.length;t++){let i=e[t];const r=document.createElement("div");r.classList.add("individualTaskContainer"),r.id=`task${t}`;const a=document.createElement("div");a.classList.add("flexStretch"),a.id=`${t}`;const o=document.createElement("h2");o.innerText=`${i.taskTitle}`,o.classList.add("taskName");const d=new Image;d.src=u,d.id=`${t}`,d.classList.add("enclosedIMG"),d.addEventListener("click",(()=>{x(t)}));const c=document.createElement("div");c.classList.add("flexAround");const l=new Image;l.src=m,l.id=`${t};`,l.classList.add("enclosedIMG"),l.addEventListener("click",(()=>{I(t)}));const s=document.createElement("div");s.classList.add("time"),s.innerText=`${i.time}`;const A=document.createElement("div");A.classList.add("date"),A.innerText=`${i.date}`,c.appendChild(s),c.appendChild(A),c.appendChild(d),c.appendChild(l),a.appendChild(o),a.appendChild(c),r.appendChild(a);const p=document.createElement("p");p.innerText=`${i.detail}`,p.classList.add("taskDetail"),r.appendChild(p),n.appendChild(r)}return n}(e.tasks);return n.appendChild(d),n}(f);var r;n.appendChild(i),e.appendChild(n),r=h,localStorage.clear(),localStorage.setItem("projectArray",JSON.stringify(r))}function I(e){h[C].tasks.splice(e,1),g()}function x(e){const n=document.getElementById(`task${e}`);n.innerHTML="",n.classList.remove("individualTaskContainer"),n.classList.add("editTaskContainer");const t=document.createElement("form");t.classList.add("editTaskContainer"),t.id=`taskedit${e}`;const i=document.createElement("div");i.classList.add("flexStretch");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("placeholder","Task Name"),r.classList.add("inputText"),r.required=!0;const a=document.createElement("input");a.setAttribute("type","submit"),a.id="taskSubmit",a.innerText="Submit",a.addEventListener("click",(()=>{}));const o=document.createElement("div");o.classList.add("flexAround");const d=document.createElement("input");d.setAttribute("type","time"),d.classList.add("time"),d.required=!0;const c=document.createElement("input");c.setAttribute("type","date"),c.classList.add("date"),c.required=!0,o.appendChild(d),o.appendChild(c),o.appendChild(a),i.appendChild(r),i.appendChild(o),n.appendChild(i);const l=document.createElement("input");l.setAttribute("type","text"),l.required=!0,l.classList.add("taskDetail"),t.appendChild(l),n.appendChild(t)}function b(e){h.splice(e,1),0==h.length?h=[{title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}]:f={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]},g()}h=function(){if(function(e){var n;try{n=window.localStorage;var t="__storage_test__";return n.setItem(t,t),n.removeItem(t),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&n&&0!==n.length}}()){return JSON.parse(localStorage.getItem("projectArray"))||[{title:"TheOdinProject",description:"Learn Web Development",tasks:[{title:"Create To-Do-List",date:"dd/mm/yyyy",detail:"Create using Javascript and Date-fns",time:"13:01"}]}]}return[{title:"TheOdinProject",description:"Learn Web Development",tasks:[{title:"Create To-Do-List",date:"dd/mm/yyyy",detail:"Create using Javascript and Date-fns",time:"13:01"}]}]}(),g()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90by1kby1saXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFRhcmdldC5qcyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90by1kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90by1kby1saXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL3RvLWRvLWxpc3Qvd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly90by1kby1saXN0Ly4vc3JjL0RPTWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL3RvLWRvLWxpc3QvLi9zcmMvc3RvcmFnZUhhbmRsZXIuanMiLCJ3ZWJwYWNrOi8vdG8tZG8tbGlzdC8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwiY29uY2F0Iiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWFRdWVyeSIsImRlZHVwZSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJsZW5ndGgiLCJfaSIsIl9hcnJheUxpa2VUb0FycmF5IiwiYXJyIiwibGVuIiwiYXJyMiIsIkFycmF5IiwiX2l0ZW0iLCJpc0FycmF5IiwiX2FycmF5V2l0aEhvbGVzIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJfcyIsIl9lIiwiX2FyciIsIl9uIiwiX2QiLCJjYWxsIiwibmV4dCIsImRvbmUiLCJ2YWx1ZSIsImVyciIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIm8iLCJtaW5MZW4iLCJuIiwiT2JqZWN0IiwicHJvdG90eXBlIiwic2xpY2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIlR5cGVFcnJvciIsIl9ub25JdGVyYWJsZVJlc3QiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwibWVtbyIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4Iiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZFN0eWxlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pbmRleCIsInNwbGljZSIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwiaW5zZXJ0IiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwicmVtb3ZlQXR0cmlidXRlIiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJFcnJvciIsInJlcGxhY2UiLCJwIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIm5vbmNlIiwiaW5kZXhPZlByb2plY3REaXNwbGF5ZWQiLCJwcm9qZWN0QmVpbmdEaXNwbGF5ZWQiLCJmaW5hbEFycmF5IiwicHJvamVjdENvbnN0cnVjdG9yIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInRhc2tzIiwiZGF0ZSIsImRldGFpbCIsInRpbWUiLCJ0YXNrVGl0bGUiLCJET01jb25zdHJ1Y3RvciIsImJvZHkiLCJwYWdlV3JhcHBlciIsImxlZnRQYW5lIiwicHJvamVjdEFycmF5IiwidG90YWxQcm9qZWN0cyIsImlubmVySFRNTCIsImhvbWUiLCJjbGFzc0xpc3QiLCJhZGQiLCJob21lVGV4dCIsImlubmVyVGV4dCIsIm51bUhvbWVUYXNrIiwidGFza0R1ZVRvZGF5IiwidGV4dFRhc2tEdWVUb2RheSIsIm51bVRhc2tEdWVUb2RheSIsImR1ZVdlZWsiLCJ0ZXh0V2VlayIsIm51bVRoaXNXZWVrIiwiZGlzcGxheVByb2plY3RzIiwib3B0aW9uUHJvamVjdCIsInRleHRQcm9qZWN0IiwiY29udGFpbmVyMSIsIm51bVByb2plY3QiLCJkcm9wZG93biIsIkltYWdlIiwiZHJvcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJ0b2dnbGUiLCJhZGRQcm9qZWN0IiwibGF5ZXIiLCJhZGRMYXllciIsInN1YiIsInByb2pUaXRsZSIsInJlcXVpcmVkIiwicHJvakRlc2NyaWJlIiwic3VibWl0QnRuIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsIm5ld1Byb2plY3QiLCJhZGROZXdQcm9qZWN0IiwidGV4dEFkZFByb2plY3QiLCJhZGRCdG4iLCJwcm9qZWN0TGlzdCIsImFyZyIsImN1cnJlbnRQcm9qZWN0IiwicHJvamVjdCIsInByb2plY3ROYW1lIiwiZGVsZXRlQnRuIiwic3RvcFByb3BhZ2F0aW9uIiwiZGVsZXRlUHJvamVjdCIsImNyZWF0ZVByb2plY3RET00iLCJsZWZ0UGFuZUNvbnN0cnVjdG9yIiwicmlnaHRQYW5lIiwicHJvamVjdERlc2NyaXB0aW9uIiwiaGVhZGluZ3BhcnQiLCJoZWFkaW5nIiwiZWRpdElNRyIsImVkaXQiLCJ0aXRsZU9mUHJvamVjdCIsImRlc2NyaWJlIiwiZWRpdFByb2plY3QiLCJ0YXNrQ29udGFpbmVyIiwiYWRkVGFzayIsImN1cnJlbnRUYXNrIiwiaW5kaXZpZHVhbENvbnRhaW5lciIsInVwcGVyQ29udGFpbmVyIiwidGFza05hbWUiLCJlZGl0QnRuIiwiZWRpdFRhc2tET00iLCJ0aGVGbGV4IiwiZGVsZXRlVGFzayIsInRpbWVPZlRhc2siLCJkYXRlT2ZUYXNrIiwicGFyYSIsImNyZWF0ZVRhc2tET00iLCJyaWdodFBhbmVDb25zdHJ1Y3RvciIsImxvY2FsU3RvcmFnZSIsImNsZWFyIiwic2V0SXRlbSIsImdldEVsZW1lbnRCeUlkIiwiY29udGFpbmVyIiwic3VibWl0IiwidHlwZSIsInN0b3JhZ2UiLCJ4IiwicmVtb3ZlSXRlbSIsIkRPTUV4Y2VwdGlvbiIsImNvZGUiLCJzdG9yYWdlQXZhaWxhYmxlIiwicGFyc2UiLCJnZXRJdGVtIiwiZ2V0RnJvbUxvY2FsU3RvcmFnZSJdLCJtYXBwaW5ncyI6InVGQUdJQSxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLDhoSkFBK2hKLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLDZCQUE2QixNQUFRLEdBQUcsU0FBVyxvb0VBQW9vRSxlQUFpQixDQUFDLCtoSkFBK2hKLFdBQWEsTUFFeDFXLFcsUUNDQUQsRUFBT0UsUUFBVSxTQUFVQyxHQUN6QixJQUFJQyxFQUFPLEdBdURYLE9BckRBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0MsS0FBS0MsS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVTixFQUF1QkssR0FFckMsT0FBSUEsRUFBSyxHQUNBLFVBQVVFLE9BQU9GLEVBQUssR0FB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YkMsTUFBTyxDQUNILENBQ0lGLE1BQU0sb0JBQ05HLEtBQU0sYUFDTkMsT0FBUSx1Q0FDUkMsS0FBTSxZRHhCakI4RixHRVhiLEsiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJib2R5e1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzMzMzO1xcbiAgICBjb2xvcjogI2VlZWVlZTtcXG59XFxuLmVuY2xvc2VkSU1He1xcbiAgICBoZWlnaHQ6IDEuNXJlbTtcXG4gICAgd2lkdGg6IDEuNXJlbTtcXG4gICAgcGFkZGluZzogMXB4O1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcbi5lbmNsb3NlZElNRzpob3ZlcntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjQ5Myk7XFxuICAgIG91dGxpbmU6IDFweCB3aGl0ZXNtb2tlIHNvbGlkO1xcbn1cXG4jd3JhcHBlcntcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICB0b3A6MDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICBsZWZ0OiAwO1xcbiAgICByaWdodDowO1xcbn1cXG4uZmxleFJvd3tcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5mbGV4Q29sdW1ue1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICB3aWR0aDogOTAlO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XFxufVxcbiNsZWZ0UGFuZXtcXG4gICAgcGFkZGluZzogMyU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzNzNjM2Y7XFxuICAgIGxlZnQ6MDtcXG4gICAgd2lkdGg6IDIwdnc7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbiNsZWZ0UGFuZSAuZmxleENvbHVtbntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG59XFxuI2xlZnRQYW5lIC5mbGV4RW5kOmhvdmVye1xcbiAgICBvdXRsaW5lOiAycHggc29saWQgd2hpdGVzbW9rZTtcXG59XFxuI2xlZnRQYW5lIC5mbGV4RW5ke1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBwYWRkaW5nOiA1JTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgbWFyZ2luLWJvdHRvbTogNSU7XFxufSBcXG4jcmlnaHRQYW5le1xcbiAgICBwYWRkaW5nOiAyJSA1JSA1JSA1JTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzYxNjc2YjtcXG4gICAgY29sb3I6IHdoaXRlc21va2U7XFxuICAgIHJpZ2h0OjA7XFxuICAgIHdpZHRoOiA4MHZ3O1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbiNyaWdodFBhbmUgLmZsZXhTdHJldGNoe1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG4jcmlnaHRQYW5lIC5wcm9qZWN0c3tcXG4gICAgb3V0bGluZTogMXB4IHNvbGlkIHNpbHZlcjtcXG59XFxuI3JpZ2h0UGFuZSAucHJvamVjdHM6aG92ZXJ7XFxuICAgIG91dGxpbmU6IDFweCBzb2xpZCBnb2xkO1xcbn1cXG4jcmlnaHRQYW5lIC5wcm9qZWN0RGV0YWlse1xcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xcbn1cXG4jcmlnaHRQYW5lIGgxe1xcbiAgICBtYXJnaW46IDA7XFxufVxcbiNyaWdodFBhbmUgLmZsZXhFbmR7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHdpZHRoOiA1MCU7XFxufVxcbiNwcm9qZWN0VGl0bGV7XFxuICAgIGNvbG9yOiBnb2xkO1xcbiAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcXG4gICAgZm9udC1zaXplOiA0cmVtO1xcbn1cXG4jcHJvamVjdERlc2NyaXB0aW9ue1xcbiAgICBtYXJnaW46IDA7XFxufVxcbiN0YXNrQ29udGFpbmVye1xcbiAgICB3aWR0aDogOTAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBtYXJnaW4tdG9wOiAycmVtO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5pbmRpdmlkdWFsVGFza0NvbnRhaW5lcntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYmFja2dyb3VuZDogYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIHBhZGRpbmc6IDAgNSUgMCA1JTtcXG59XFxuLnRhc2tOYW1le1xcbiAgICBjb2xvcjogb3JhbmdlO1xcbiAgICBmb250LWZhbWlseTogY3Vyc2l2ZTtcXG4gICAgZm9udC1zaXplOiAycmVtO1xcbn1cXG4jcmlnaHRQYW5lIC5mbGV4Q29sdW1ue1xcbiAgICBkaXNwbGF5OmZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbi5mbGV4Q29sdW1uIGgye1xcbiAgICBtYXJnaW46IDA7XFxufVxcbiNyaWdodFBhbmUgLmZsZXhBcm91bmR7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xcbiAgICB3aWR0aDogNTAlO1xcbn1cXG4udGFza0RldGFpbHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcXG4gICAgY29sb3I6IGhvbmV5ZGV3O1xcbiAgICB3aWR0aDogOTUlO1xcbiAgICBwYWRkaW5nOiAxJTtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgdGV4dC1vdmVyZmxvdzogYXV0bztcXG4gICB3b3JkLXdyYXA6YnJlYWstd29yZDtcXG59XFxuLmhpZGRlbntcXG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xcbn1cXG4uZWRpdFRhc2tDb250YWluZXJ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGJhY2tncm91bmQ6IGJsYWNrO1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgICBwYWRkaW5nOiAyJTtcXG59XFxuI2FkZFRhc2tCdG57XFxuICAgIHdpZHRoOiAzMCU7XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgbWFyZ2luOiAxJTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwNSwgMTAwLCAxMDApO1xcbiAgICBjb2xvcjogd2hpdGVzbW9rZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIG91dGxpbmU6IDFweCBzb2xpZCBibGFja1xcbn1cXG4uYmx1ckxheWVye1xcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICAgICAgd2lkdGg6IDEwMCU7XFxuICAgICAgICBoZWlnaHQ6IDEwMCU7XFxuICAgICAgICB0b3A6IDA7XFxuICAgICAgICBsZWZ0OiAwO1xcbiAgICAgICAgcmlnaHQ6IDA7XFxuICAgICAgICBib3R0b206IDA7XFxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuOCk7XFxuICAgICAgICB6LWluZGV4OiAyO1xcbiAgICAgICAgY3Vyc29yOmRlZmF1bHQ7XFxufVxcbiNhZGRMYXllcntcXG4gICAgei1pbmRleDogNTtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XFxuICAgIHdpZHRoOiA1MHJlbTtcXG4gICAgaGVpZ2h0OiA1MHJlbTtcXG4gICAgbWluLWhlaWdodDogNzAwcHg7XFxuICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiNkNmUwZjA7XFxuICAgIGJvcmRlci1yYWRpdXM6IDUwcHg7XFxuICAgIHRvcDogNTAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XFxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKSB0cmFuc2xhdGVZKC01MCUpO1xcbn1cXG4uc3ViIGlucHV0e1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXG4gICAgb3V0bGluZTogMnB4IGdyZXkgc29saWQ7XFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcXG59XFxuLnN1YntcXG4gICAgaGVpZ2h0OiA3NSU7XFxuICAgIG1hcmdpbjogMCBhdXRvO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCggNiwgMWZyKTtcXG4gICAgZ3JpZC1nYXA6IDFyZW07XFxuICAgIHBhZGRpbmc6IDEwJTtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICBmb250LXNpemU6IDJyZW07XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBh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U0FBUztRQUNULGlDQUFpQztRQUNqQyxVQUFVO1FBQ1YsY0FBYztBQUN0QjtBQUNBO0lBQ0ksVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsWUFBWTtJQUNaLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsY0FBYztJQUNkLHdCQUF3QjtJQUN4QixtQkFBbUI7SUFDbkIsUUFBUTtJQUNSLFNBQVM7SUFDVCxpREFBaUQ7SUFDakQsb0RBQW9EO0lBQ3BELDRDQUE0QztBQUNoRDtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsWUFBWTtJQUNaLGVBQWU7SUFDZix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLFNBQVM7SUFDVCwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2QsYUFBYTtJQUNiLG1DQUFtQztJQUNuQyxjQUFjO0lBQ2QsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25CXCIsXCJzb3VyY2VzQ29udGVudFwiOltcImJvZHl7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7XFxuICAgIGNvbG9yOiAjZWVlZWVlO1xcbn1cXG4uZW5jbG9zZWRJTUd7XFxuICAgIGhlaWdodDogMS41cmVtO1xcbiAgICB3aWR0aDogMS41cmVtO1xcbiAgICBwYWRkaW5nOiAxcHg7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG59XFxuLmVuY2xvc2VkSU1HOmhvdmVye1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyOCwgMTI4LCAxMjgsIDAuNDkzKTtcXG4gICAgb3V0bGluZTogMXB4IHdoaXRlc21va2Ugc29saWQ7XFxufVxcbiN3cmFwcGVye1xcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIHRvcDowO1xcbiAgICBib3R0b206IDA7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHJpZ2h0OjA7XFxufVxcbi5mbGV4Um93e1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuLmZsZXhDb2x1bW57XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcXG59XFxuI2xlZnRQYW5le1xcbiAgICBwYWRkaW5nOiAzJTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM3M2MzZjtcXG4gICAgbGVmdDowO1xcbiAgICB3aWR0aDogMjB2dztcXG4gICAgaGVpZ2h0OiAxMDB2aDtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuI2xlZnRQYW5lIC5mbGV4Q29sdW1ue1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcbn1cXG4jbGVmdFBhbmUgLmZsZXhFbmQ6aG92ZXJ7XFxuICAgIG91dGxpbmU6IDJweCBzb2xpZCB3aGl0ZXNtb2tlO1xcbn1cXG4jbGVmdFBhbmUgLmZsZXhFbmR7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMzMzMztcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIHBhZGRpbmc6IDUlO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbiAgICBtYXJnaW4tYm90dG9tOiA1JTtcXG59IFxcbiNyaWdodFBhbmV7XFxuICAgIHBhZGRpbmc6IDIlIDUlIDUlIDUlO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjE2NzZiO1xcbiAgICBjb2xvcjogd2hpdGVzbW9rZTtcXG4gICAgcmlnaHQ6MDtcXG4gICAgd2lkdGg6IDgwdnc7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuI3JpZ2h0UGFuZSAuZmxleFN0cmV0Y2h7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDEwMCU7XFxufVxcblxcbiNyaWdodFBhbmUgLnByb2plY3Rze1xcbiAgICBvdXRsaW5lOiAxcHggc29saWQgc2lsdmVyO1xcbn1cXG4jcmlnaHRQYW5lIC5wcm9qZWN0czpob3ZlcntcXG4gICAgb3V0bGluZTogMXB4IHNvbGlkIGdvbGQ7XFxufVxcbiNyaWdodFBhbmUgLnByb2plY3REZXRhaWx7XFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XFxufVxcbiNyaWdodFBhbmUgaDF7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuI3JpZ2h0UGFuZSAuZmxleEVuZHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgd2lkdGg6IDUwJTtcXG59XFxuI3Byb2plY3RUaXRsZXtcXG4gICAgY29sb3I6IGdvbGQ7XFxuICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xcbiAgICBmb250LXNpemU6IDRyZW07XFxufVxcbiNwcm9qZWN0RGVzY3JpcHRpb257XFxuICAgIG1hcmdpbjogMDtcXG59XFxuI3Rhc2tDb250YWluZXJ7XFxuICAgIHdpZHRoOiA5MCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgb3ZlcmZsb3c6IGF1dG87XFxuICAgIG1hcmdpbi10b3A6IDJyZW07XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG59XFxuLmluZGl2aWR1YWxUYXNrQ29udGFpbmVye1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBiYWNrZ3JvdW5kOiBibGFjaztcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgcGFkZGluZzogMCA1JSAwIDUlO1xcbn1cXG4udGFza05hbWV7XFxuICAgIGNvbG9yOiBvcmFuZ2U7XFxuICAgIGZvbnQtZmFtaWx5OiBjdXJzaXZlO1xcbiAgICBmb250LXNpemU6IDJyZW07XFxufVxcbiNyaWdodFBhbmUgLmZsZXhDb2x1bW57XFxuICAgIGRpc3BsYXk6ZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLmZsZXhDb2x1bW4gaDJ7XFxuICAgIG1hcmdpbjogMDtcXG59XFxuI3JpZ2h0UGFuZSAuZmxleEFyb3VuZHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XFxuICAgIHdpZHRoOiA1MCU7XFxufVxcbi50YXNrRGV0YWlse1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBncmV5O1xcbiAgICBjb2xvcjogaG9uZXlkZXc7XFxuICAgIHdpZHRoOiA5NSU7XFxuICAgIHBhZGRpbmc6IDElO1xcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xcbiAgICB0ZXh0LW92ZXJmbG93OiBhdXRvO1xcbiAgIHdvcmQtd3JhcDpicmVhay13b3JkO1xcbn1cXG4uaGlkZGVue1xcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XFxufVxcbi5lZGl0VGFza0NvbnRhaW5lcntcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYmFja2dyb3VuZDogYmxhY2s7XFxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XFxuICAgIHBhZGRpbmc6IDIlO1xcbn1cXG4jYWRkVGFza0J0bntcXG4gICAgd2lkdGg6IDMwJTtcXG4gICAgaGVpZ2h0OiAycmVtO1xcbiAgICBtYXJnaW46IDElO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTA1LCAxMDAsIDEwMCk7XFxuICAgIGNvbG9yOiB3aGl0ZXNtb2tlO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgb3V0bGluZTogMXB4IHNvbGlkIGJsYWNrXFxufVxcbi5ibHVyTGF5ZXJ7XFxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgICAgICB3aWR0aDogMTAwJTtcXG4gICAgICAgIGhlaWdodDogMTAwJTtcXG4gICAgICAgIHRvcDogMDtcXG4gICAgICAgIGxlZnQ6IDA7XFxuICAgICAgICByaWdodDogMDtcXG4gICAgICAgIGJvdHRvbTogMDtcXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwwLDAsMC44KTtcXG4gICAgICAgIHotaW5kZXg6IDI7XFxuICAgICAgICBjdXJzb3I6ZGVmYXVsdDtcXG59XFxuI2FkZExheWVye1xcbiAgICB6LWluZGV4OiA1O1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG4gICAgd2lkdGg6IDUwcmVtO1xcbiAgICBoZWlnaHQ6IDUwcmVtO1xcbiAgICBtaW4taGVpZ2h0OiA3MDBweDtcXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIGJhY2tncm91bmQtY29sb3I6I2Q2ZTBmMDtcXG4gICAgYm9yZGVyLXJhZGl1czogNTBweDtcXG4gICAgdG9wOiA1MCU7XFxuICAgIGxlZnQ6IDUwJTtcXG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSkgdHJhbnNsYXRlWSgtNTAlKTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpIHRyYW5zbGF0ZVkoLTUwJSk7XFxufVxcbi5zdWIgaW5wdXR7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC1zaXplOiAycmVtO1xcbiAgICBvdXRsaW5lOiAycHggZ3JleSBzb2xpZDtcXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xcbiAgICBtYXJnaW46IDA7XFxuICAgIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xcbn1cXG4uc3Vie1xcbiAgICBoZWlnaHQ6IDc1JTtcXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KCA2LCAxZnIpO1xcbiAgICBncmlkLWdhcDogMXJlbTtcXG4gICAgcGFkZGluZzogMTAlO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMnJlbTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IHZhciBfaSA9IGFyciAmJiAodHlwZW9mIFN5bWJvbCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBhcnJbU3ltYm9sLml0ZXJhdG9yXSB8fCBhcnJbXCJAQGl0ZXJhdG9yXCJdKTsgaWYgKF9pID09IG51bGwpIHJldHVybjsgdmFyIF9hcnIgPSBbXTsgdmFyIF9uID0gdHJ1ZTsgdmFyIF9kID0gZmFsc2U7IHZhciBfcywgX2U7IHRyeSB7IGZvciAoX2kgPSBfaS5jYWxsKGFycik7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0VGFyZ2V0OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKHN0eWxlLCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIHJldHVybiBzdHlsZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gYXBwbHkoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUucmVtb3ZlQXR0cmlidXRlKFwibWVkaWFcIik7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZSk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IG9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICByZXR1cm4ge1xuICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKG9iaikge1xuICAgICAgYXBwbHkoc3R5bGUsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgZ2V0VGFyZ2V0IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VGFyZ2V0LmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IGZ1bmN0aW9uKGNzcywgc3R5bGUpe1xuICAgICAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICAgICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICAgICAgfSBlbHNlIHtcbiAgICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuXG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgICB9XG4gIH07XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBmdW5jdGlvbihzdHlsZSkge1xuICAgICAgICB2YXIgbm9uY2UgPVxuICAgICAgICAgIHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgICAgICBpZiAobm9uY2UpIHtcbiAgICAgICAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKHN0eWxlKXtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KFwiaGVhZFwiKTtcblxuICAgIGlmICghdGFyZ2V0KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiXG4gICAgICApO1xuICAgIH1cblxuICAgIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH07XG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCIvLyBIYW5kbGVzIHRoZSBjb25zdHJ1Y3Rpb24gb2YgUGFnZS5cbi8vIE5vIGV2ZW50IGhhbmRsZXIgdXNlZCBpbnNpZGUgaGVyZS5cbmltcG9ydCAnLi9zdHlsZS5jc3MnXG5pbXBvcnQgZHJvcCBmcm9tICcuL0ltYWdlcy9kcm9wLnBuZyc7XG5pbXBvcnQgYWRkIGZyb20gJy4vSW1hZ2VzL2FkZC5wbmcnO1xuaW1wb3J0IGVkaXQgZnJvbSAnLi9JbWFnZXMvZWRpdC5wbmcnO1xuaW1wb3J0IGRlbGV0ZUlNRyBmcm9tICcuL0ltYWdlcy9kZWxldGUucG5nJztcbmltcG9ydCB7IHN0b3JlQXJyYXksIGdldEZyb21Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuL3N0b3JhZ2VIYW5kbGVyLmpzJztcblxubGV0IHByb2plY3RCZWluZ0Rpc3BsYXllZCA9IDA7XG5sZXQgaW5kZXhPZlByb2plY3REaXNwbGF5ZWQ7XG5sZXQgZmluYWxBcnJheSA9IFtdO1xuZmluYWxBcnJheSA9IGdldEZyb21Mb2NhbFN0b3JhZ2UoKTtcbi8vIFByb2plY3Qgb2JqZWN0IENvbnN0cnVjdG9yLlxuZnVuY3Rpb24gcHJvamVjdENvbnN0cnVjdG9yKHRpdGxlLGRlc2NyaXB0aW9uKXtcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIHRoaXMudGFza3MgPSBbXG4gICAgICAgIHtcbiAgICAgICAgICAgIGRhdGU6IFwiZGQvbW0veXl5eVwiLFxuICAgICAgICAgICAgZGV0YWlsOiBcIkl0IGlzIGEgU2FtcGxlIHRhc2tcIixcbiAgICAgICAgICAgIHRpbWUgOiBcIjEzOjAxXCIsXG4gICAgICAgICAgICB0YXNrVGl0bGU6IFwiU2FtcGxlIFRhc2tcIlxuICAgICAgICB9XG4gICAgXVxufVxuXG5mdW5jdGlvbiBET01jb25zdHJ1Y3Rvcigpe1xuICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIkJPRFlcIilbMF07XG4gICAgLy8gQ3JlYXRlcyBQYWdlIFdyYXBwZXIuXG4gICAgY29uc3QgcGFnZVdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHBhZ2VXcmFwcGVyLmlkID0gJ3dyYXBwZXInO1xuXG5cbiAgICAvLyBBcHBlbmRpbmcgTGVmdCBQYW5lIHRvIHBhZ2VXcmFwcGVyLlxuICAgIGNvbnN0IGxlZnRQYW5lID0gbGVmdFBhbmVDb25zdHJ1Y3RvcihmaW5hbEFycmF5KTtcbiAgICBwYWdlV3JhcHBlci5hcHBlbmRDaGlsZChsZWZ0UGFuZSk7XG5cblxuICAgIC8vIEFwcGVuZGluZyBMZWZ0IFBhbmUgdG8gcGFnZVdyYXBwZXIuXG4gICAgY29uc3QgcmlnaHRQYW5lID0gcmlnaHRQYW5lQ29uc3RydWN0b3IocHJvamVjdEJlaW5nRGlzcGxheWVkKTtcbiAgICBwYWdlV3JhcHBlci5hcHBlbmRDaGlsZChyaWdodFBhbmUpO1xuXG4gICAgLy9BcHBlbmQgcGFnZVdyYXBwZXIgdG8gYm9keTtcbiAgICBib2R5LmFwcGVuZENoaWxkKHBhZ2VXcmFwcGVyKTtcbiAgICAvLyB1cGRhdGVzIGxvY2FsbHkgc3RvcmVkIGRhdGEuXG4gICAgc3RvcmVBcnJheShmaW5hbEFycmF5KTtcbn1cblxuLy8gRnVuY3Rpb24gdG8gY29uc3RydWN0IGxlZnQgUGFuZS5cbmZ1bmN0aW9uIGxlZnRQYW5lQ29uc3RydWN0b3IocHJvamVjdEFycmF5KXtcbiAgICAgLy9UZW1wb3JhcmlseSBjcmVhdGUgdmFyaWFibGVzXG4gICAgIGxldCB0b3RhbFRhc2sgPSAwO1xuICAgICBsZXQgZHVlVG9kYXkgPSAwO1xuICAgICBsZXQgZHVlVGhpc1dlZWsgPSAwOyBcbiAgICAgbGV0IHRvdGFsUHJvamVjdHMgPSBwcm9qZWN0QXJyYXkubGVuZ3RoO1xuICAgICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuICAgICAvLyBDcmVhdGVzIGxlZnQgUGFuZS5cbiAgICAgY29uc3QgbGVmdFBhbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICBsZWZ0UGFuZS5pZCA9ICdsZWZ0UGFuZSc7XG4gICAgIGxlZnRQYW5lLmlubmVySFRNTCA9IFwiXCI7XG4gICAgIFxuIFxuICAgICAvL0NyZWF0ZXMgaG9tZSBvcHRpb24uXG4gICAgIGNvbnN0IGhvbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgaG9tZS5jbGFzc0xpc3QuYWRkKFwiZmxleEVuZFwiKTtcbiAgICAgY29uc3QgaG9tZVRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgaG9tZVRleHQuaW5uZXJUZXh0ID0gXCJIb21lXCI7XG4gICAgIGNvbnN0IG51bUhvbWVUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgIG51bUhvbWVUYXNrLmlubmVyVGV4dCA9IGAke3RvdGFsVGFza31gO1xuICAgICBob21lLmFwcGVuZENoaWxkKGhvbWVUZXh0KTtcbiAgICAgaG9tZS5hcHBlbmRDaGlsZChudW1Ib21lVGFzayk7XG4gICAgIGxlZnRQYW5lLmFwcGVuZENoaWxkKGhvbWUpO1xuIFxuICAgICAvLyBDcmVhdGVzIFRvZGF5IG9wdGlvbi5cbiAgICAgY29uc3QgdGFza0R1ZVRvZGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgIHRhc2tEdWVUb2RheS5jbGFzc0xpc3QuYWRkKCdmbGV4RW5kJyk7XG4gICAgIGNvbnN0IHRleHRUYXNrRHVlVG9kYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgdGV4dFRhc2tEdWVUb2RheS5pbm5lclRleHQgPSAnVG9kYXknO1xuICAgICBjb25zdCBudW1UYXNrRHVlVG9kYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgbnVtVGFza0R1ZVRvZGF5LmlubmVyVGV4dCA9IGAke2R1ZVRvZGF5fWA7XG4gICAgIHRhc2tEdWVUb2RheS5hcHBlbmRDaGlsZCh0ZXh0VGFza0R1ZVRvZGF5KTtcbiAgICAgdGFza0R1ZVRvZGF5LmFwcGVuZENoaWxkKG51bVRhc2tEdWVUb2RheSk7XG4gICAgIGxlZnRQYW5lLmFwcGVuZENoaWxkKHRhc2tEdWVUb2RheSk7XG4gXG4gXG4gICAgIC8vIENyZWF0ZXMgVGhpcyBXZWVrIG9wdGlvbi5cbiAgICAgY29uc3QgZHVlV2VlayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICBkdWVXZWVrLmNsYXNzTGlzdC5hZGQoJ2ZsZXhFbmQnKTtcbiAgICAgY29uc3QgdGV4dFdlZWsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgdGV4dFdlZWsuaW5uZXJUZXh0ID0gXCJUaGlzIFdlZWtcIjtcbiAgICAgY29uc3QgbnVtVGhpc1dlZWsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgbnVtVGhpc1dlZWsuaW5uZXJUZXh0ID0gYCR7ZHVlVGhpc1dlZWt9YFxuICAgICBkdWVXZWVrLmFwcGVuZENoaWxkKHRleHRXZWVrKTtcbiAgICAgZHVlV2Vlay5hcHBlbmRDaGlsZChudW1UaGlzV2Vlayk7XG4gICAgIGxlZnRQYW5lLmFwcGVuZENoaWxkKGR1ZVdlZWspO1xuICAgICAvLyBDcmVhdGVzIFByb2VqY3RzIGZsZXggZm9yIHByb2plY3RzIGRpc3BsYXkuXG4gICAgIGNvbnN0IGRpc3BsYXlQcm9qZWN0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICBkaXNwbGF5UHJvamVjdHMuY2xhc3NMaXN0LmFkZCgnZmxleENvbHVtbicpO1xuICAgICBkaXNwbGF5UHJvamVjdHMuaWQgPSBcInByb2plY3REaXNwbGF5XCI7XG4gICAgIC8vIENyZWF0ZXMgUHJvamVjdHMgb3B0aW9uLlxuICAgICBjb25zdCBvcHRpb25Qcm9qZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgIG9wdGlvblByb2plY3QuY2xhc3NMaXN0LmFkZCgnZmxleEVuZCcpO1xuICAgICBjb25zdCB0ZXh0UHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICB0ZXh0UHJvamVjdC5pbm5lclRleHQgPSBcIlByb2plY3RzXCI7XG4gICAgIGNvbnN0IGNvbnRhaW5lcjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgY29udGFpbmVyMS5jbGFzc0xpc3QuYWRkKCdmbGV4Um93Jyk7XG4gICAgIGNvbnN0IG51bVByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgbnVtUHJvamVjdC5pbm5lclRleHQgPSBgJHt0b3RhbFByb2plY3RzfWA7XG4gICAgIGNvbnN0IGRyb3Bkb3duID0gbmV3IEltYWdlKCk7XG4gICAgIGRyb3Bkb3duLnNyYyA9IGRyb3A7XG4gICAgIGRyb3Bkb3duLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgICAgIGRpc3BsYXlQcm9qZWN0cy5jbGFzc0xpc3QudG9nZ2xlKCdoaWRkZW4nKTtcbiAgICAgfSlcbiAgICAgZHJvcGRvd24uY2xhc3NMaXN0LmFkZCgnZW5jbG9zZWRJTUcnKTtcbiAgICAgb3B0aW9uUHJvamVjdC5hcHBlbmRDaGlsZCh0ZXh0UHJvamVjdCk7XG4gICAgIGNvbnRhaW5lcjEuYXBwZW5kQ2hpbGQobnVtUHJvamVjdCk7XG4gICAgIGNvbnRhaW5lcjEuYXBwZW5kQ2hpbGQoZHJvcGRvd24pO1xuICAgICBvcHRpb25Qcm9qZWN0LmFwcGVuZENoaWxkKGNvbnRhaW5lcjEpO1xuICAgICBsZWZ0UGFuZS5hcHBlbmRDaGlsZChvcHRpb25Qcm9qZWN0KTtcbiAgICAgLy8gQ3JlYXRlIGFkZCBidXR0b24gaW5zaWRlIGRpc3BsYXlQcm9qZWN0cy5cbiAgICAgY29uc3QgYWRkUHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICBhZGRQcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgICAgICAgYWRkTmV3UHJvamVjdCgpO1xuICAgICB9KVxuICAgICBhZGRQcm9qZWN0LmNsYXNzTGlzdC5hZGQoJ2ZsZXhFbmQnKTtcbiAgICAgY29uc3QgdGV4dEFkZFByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgdGV4dEFkZFByb2plY3QuaW5uZXJUZXh0ID0gXCJBZGQgUHJvamVjdFwiO1xuICAgICBjb25zdCBhZGRCdG4gPSBuZXcgSW1hZ2UoKTtcbiAgICAgYWRkQnRuLnNyYyA9IGFkZDtcbiAgICAgYWRkQnRuLmNsYXNzTGlzdC5hZGQoJ2VuY2xvc2VkSU1HJyk7XG4gICAgIGFkZFByb2plY3QuYXBwZW5kQ2hpbGQodGV4dEFkZFByb2plY3QpO1xuICAgICBhZGRQcm9qZWN0LmFwcGVuZENoaWxkKGFkZEJ0bik7XG4gICAgIC8vIEFkZHMgUHJvamVjdExpc3QgdG8gZGlzcGxheVByb2plY3RzLlxuICAgICBjb25zdCBwcm9qZWN0TGlzdCA9IGNyZWF0ZVByb2plY3RET00ocHJvamVjdEFycmF5KVxuICAgICAvLyBBZGRzIGFkZCBQcm9qZWN0cyBCdXR0b24gdG8gZGlzcGxheVByb2plY3RzLlxuICAgICBkaXNwbGF5UHJvamVjdHMuYXBwZW5kQ2hpbGQoYWRkUHJvamVjdCk7XG4gICAgIGRpc3BsYXlQcm9qZWN0cy5hcHBlbmRDaGlsZChwcm9qZWN0TGlzdCk7XG4gICAgIGxlZnRQYW5lLmFwcGVuZENoaWxkKGRpc3BsYXlQcm9qZWN0cyk7XG4gICAgIHJldHVybiBsZWZ0UGFuZTtcbn1cbi8vIFRha2VzIGdldEZyb21Mb2NhbFN0b3JhZ2UgYXMgYXJndW1lbnQuXG5mdW5jdGlvbiByaWdodFBhbmVDb25zdHJ1Y3Rvcihwcm9qZWN0KXtcbiAgICBjb25zdCByaWdodFBhbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICByaWdodFBhbmUuaWQ9J3JpZ2h0UGFuZSc7XG4gICAgcmlnaHRQYW5lLmlubmVySFRNTCA9IFwiXCI7XG5cblxuICAgIC8vIFRvIHNob3cgZGV0YWlscyBvZiBlYWNoIHByb2plY3QuXG4gICAgY29uc3QgcHJvamVjdERlc2NyaXB0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgcHJvamVjdERlc2NyaXB0aW9uLmNsYXNzTGlzdC5hZGQoJ2ZsZXhDb2x1bW4nKVxuXG4gICAgLy8gQ3JlYXRpbmcgcHJvamVjdCBuYW1lIGhlYWRpbmcuXG4gICAgY29uc3QgaGVhZGluZ3BhcnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBoZWFkaW5ncGFydC5jbGFzc0xpc3QuYWRkKFwiZmxleFN0cmV0Y2hcIik7XG4gICAgY29uc3QgaGVhZGluZyAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMScpO1xuICAgIGhlYWRpbmcuaW5uZXJUZXh0ID0gYCR7cHJvamVjdC50aXRsZX1gO1xuICAgIGhlYWRpbmcuaWQ9XCJwcm9qZWN0VGl0bGVcIjtcbiAgICBoZWFkaW5ncGFydC5hcHBlbmRDaGlsZChoZWFkaW5nKTtcbiAgICBjb25zdCBlZGl0SU1HID0gbmV3IEltYWdlKCk7XG4gICAgaWYocHJvamVjdEJlaW5nRGlzcGxheWVkPT17XG4gICAgICAgIHRpdGxlIDogXCJTZWxlY3QgYSBwcm9qZWN0LlwiLFxuICAgICAgICBkZXNjcmlwdGlvbiA6IFwiUHJvamVjdCBEZXNjcmlwdGlvbiB3aWxsIGJlIHNob3duIGhlcmUuXCIsXG4gICAgICAgIHRhc2tzIDogW11cbiAgICAgfSB8fCBwcm9qZWN0QmVpbmdEaXNwbGF5ZWQgPT17XG4gICAgICAgIHRpdGxlIDogXCJObyBQcm9qZWN0cyBpbiB0YXNrIExpc3RcIixcbiAgICAgICAgZGVzY3JpcHRpb24gOiBcIkNyZWF0ZSBhIFByb2plY3QgdG8gYWRkIHRhc2tzIHVuZGVyIGl0LlwiLFxuICAgICAgICB0YXNrcyA6IFtdXG4gICAgfSl7XG4gICAgICAgIGVkaXRJTUcuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJyk7XG4gICAgfWVsc2V7XG4gICAgICAgIGVkaXRJTUcuY2xhc3NMaXN0LnJlbW92ZSgnaGlkZGVuJyk7XG4gICAgfVxuICAgIGVkaXRJTUcuc3JjID0gZWRpdDtcbiAgICBlZGl0SU1HLmNsYXNzTGlzdC5hZGQoXCJlbmNsb3NlZElNR1wiKTtcbiAgICBlZGl0SU1HLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgICAgICBlZGl0UHJvamVjdChpbmRleE9mUHJvamVjdERpc3BsYXllZCk7XG4gICAgfSk7XG4gICAgaGVhZGluZ3BhcnQuYXBwZW5kQ2hpbGQoZWRpdElNRyk7XG4gICAgcHJvamVjdERlc2NyaXB0aW9uLmFwcGVuZENoaWxkKGhlYWRpbmdwYXJ0KTtcblxuICAgIC8vIENyZWF0aW5nIERlc2NyaXB0aW9uIG9mIFByb2plY3QuXG4gICAgY29uc3QgZGVzY3JpYmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgZGVzY3JpYmUuaW5uZXJUZXh0ID0gYCR7cHJvamVjdC5kZXNjcmlwdGlvbn1gXG4gICAgZGVzY3JpYmUuaWQ9XCJwcm9qZWN0RGVzY3JpcHRpb25cIjtcbiAgICBwcm9qZWN0RGVzY3JpcHRpb24uYXBwZW5kQ2hpbGQoZGVzY3JpYmUpO1xuICAgIHJpZ2h0UGFuZS5hcHBlbmRDaGlsZChwcm9qZWN0RGVzY3JpcHRpb24pO1xuICAgXG5cbiAgICAvLyBmdW5jdGlvbiB0byByZW5kZXIgdGFza3MuXG4gICAgY29uc3QgdGFza0NvbnRhaW5lciA9IGNyZWF0ZVRhc2tET00ocHJvamVjdC50YXNrcyk7XG4gICAgcmlnaHRQYW5lLmFwcGVuZENoaWxkKHRhc2tDb250YWluZXIpO1xuXG4gICAgcmV0dXJuIHJpZ2h0UGFuZTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVGFza0RPTShhcmcpe1xuICAgIC8vIENyZWF0aW5nIFRoZSB0YXNrIGNvbnRhaW5lci5cbiAgICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdGFza0NvbnRhaW5lci5pZCA9IFwidGFza0NvbnRhaW5lclwiO1xuXG4gICAgY29uc3QgYWRkVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICAgIGFkZFRhc2suaW5uZXJUZXh0ID0gXCJBZGQgVGFza1wiO1xuICAgIGlmKHByb2plY3RCZWluZ0Rpc3BsYXllZD09e1xuICAgICAgICB0aXRsZSA6IFwiU2VsZWN0IGEgcHJvamVjdC5cIixcbiAgICAgICAgZGVzY3JpcHRpb24gOiBcIlByb2plY3QgRGVzY3JpcHRpb24gd2lsbCBiZSBzaG93biBoZXJlLlwiLFxuICAgICAgICB0YXNrcyA6IFtdXG4gICAgIH0gfHwgcHJvamVjdEJlaW5nRGlzcGxheWVkID09e1xuICAgICAgICB0aXRsZSA6IFwiTm8gUHJvamVjdHMgaW4gdGFzayBMaXN0XCIsXG4gICAgICAgIGRlc2NyaXB0aW9uIDogXCJDcmVhdGUgYSBQcm9qZWN0IHRvIGFkZCB0YXNrcyB1bmRlciBpdC5cIixcbiAgICAgICAgdGFza3MgOiBbXVxuICAgIH0pe1xuICAgICAgICBhZGRUYXNrLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgIH1lbHNle1xuICAgICAgICBhZGRUYXNrLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpO1xuICAgIH1cbiAgICBhZGRUYXNrLmlkPVwiYWRkVGFza0J0blwiO1xuICAgIGFkZFRhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICAgICAgICBhZGROZXdUYXNrKGFyZyk7XG4gICAgfSlcbiAgICB0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKGFkZFRhc2spO1xuICAgIGZvcihsZXQgaSA9IDA7IGk8IGFyZy5sZW5ndGggOyBpKyspe1xuICAgICAgICBsZXQgY3VycmVudFRhc2sgPSBhcmdbaV07XG4gICAgICAgIC8vIEZvciBpbmRpdmlkdWFsIGNvbnRhaW5lciBvZiBlYWNoIHRhc2suXG4gICAgICAgIGNvbnN0IGluZGl2aWR1YWxDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgaW5kaXZpZHVhbENvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdpbmRpdmlkdWFsVGFza0NvbnRhaW5lcicpO1xuICAgICAgICBpbmRpdmlkdWFsQ29udGFpbmVyLmlkPWB0YXNrJHtpfWA7XG5cbiAgICAgICAgLy8gVXBwZXIgY29udGFpbmVyIG9mIHRoZSB0YXNrLlxuICAgICAgICBjb25zdCB1cHBlckNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB1cHBlckNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdmbGV4U3RyZXRjaCcpO1xuICAgICAgICB1cHBlckNvbnRhaW5lci5pZD1gJHtpfWA7XG4gICAgICAgIC8vIFRoZSBuYW1lIG9mIHRhc2sgYW5kIGVkaXQgYW5kIGRlbGV0ZSBidXR0b24gYXJlIGF2YWlsYWJsZSBpbiB0aGlzIHBhcnQuXG4gICAgICAgIGNvbnN0IHRhc2tOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICAgICAgdGFza05hbWUuaW5uZXJUZXh0ID0gYCR7Y3VycmVudFRhc2sudGFza1RpdGxlfWA7XG4gICAgICAgIHRhc2tOYW1lLmNsYXNzTGlzdC5hZGQoJ3Rhc2tOYW1lJyk7XG4gICAgICAgIC8vIEZvciBlZGl0IEJ1dHRvbi5cbiAgICAgICAgY29uc3QgZWRpdEJ0biA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBlZGl0QnRuLnNyYyAgPSBlZGl0O1xuICAgICAgICBlZGl0QnRuLmlkPWAke2l9YDtcbiAgICAgICAgZWRpdEJ0bi5jbGFzc0xpc3QuYWRkKCdlbmNsb3NlZElNRycpO1xuICAgICAgICBlZGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCk9PntcbiAgICAgICAgICAgIGVkaXRUYXNrRE9NKGkpO1xuICAgICAgICB9KVxuICAgICAgICBjb25zdCB0aGVGbGV4ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHRoZUZsZXguY2xhc3NMaXN0LmFkZCgnZmxleEFyb3VuZCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gRm9yIERlbGV0ZSBCdXR0b24uXG4gICAgICAgIGNvbnN0IGRlbGV0ZUJ0biA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBkZWxldGVCdG4uc3JjID0gZGVsZXRlSU1HO1xuICAgICAgICBkZWxldGVCdG4uaWQ9YCR7aX07YFxuICAgICAgICBkZWxldGVCdG4uY2xhc3NMaXN0LmFkZCgnZW5jbG9zZWRJTUcnKTsgXG4gICAgICAgIGRlbGV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcbiAgICAgICAgICAgIGRlbGV0ZVRhc2soaSk7XG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IHRpbWVPZlRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICB0aW1lT2ZUYXNrLmNsYXNzTGlzdC5hZGQoJ3RpbWUnKTtcbiAgICAgICAgdGltZU9mVGFzay5pbm5lclRleHQgPSBgJHtjdXJyZW50VGFzay50aW1lfWA7XG5cbiAgICAgICAgY29uc3QgZGF0ZU9mVGFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGRhdGVPZlRhc2suY2xhc3NMaXN0LmFkZCgnZGF0ZScpO1xuICAgICAgICBkYXRlT2ZUYXNrLmlubmVyVGV4dCA9IGAke2N1cnJlbnRUYXNrLmRhdGV9YDtcblxuICAgICAgICAvLyBBcHBlbmRpbmcgZGF0ZSBhbmQgdGltZSBhbmQgYnV0dG9ucy5cbiAgICAgICAgdGhlRmxleC5hcHBlbmRDaGlsZCh0aW1lT2ZUYXNrKTtcbiAgICAgICAgdGhlRmxleC5hcHBlbmRDaGlsZChkYXRlT2ZUYXNrKTtcbiAgICAgICAgdGhlRmxleC5hcHBlbmRDaGlsZChlZGl0QnRuKTtcbiAgICAgICAgdGhlRmxleC5hcHBlbmRDaGlsZChkZWxldGVCdG4pXG5cbiAgICAgICAgdXBwZXJDb250YWluZXIuYXBwZW5kQ2hpbGQodGFza05hbWUpO1xuICAgICAgICB1cHBlckNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGVGbGV4KTtcbiAgICAgICAgaW5kaXZpZHVhbENvbnRhaW5lci5hcHBlbmRDaGlsZCh1cHBlckNvbnRhaW5lcik7XG4gICAgICAgIC8vIEFwcGVuZCB0YXNrIGRldGFpbC5cbiAgICAgICAgY29uc3QgcGFyYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICAgICAgcGFyYS5pbm5lclRleHQgPSBgJHtjdXJyZW50VGFzay5kZXRhaWx9YDtcbiAgICAgICAgcGFyYS5jbGFzc0xpc3QuYWRkKCd0YXNrRGV0YWlsJyk7XG4gICAgICAgIGluZGl2aWR1YWxDb250YWluZXIuYXBwZW5kQ2hpbGQocGFyYSk7XG5cbiAgICAgICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZChpbmRpdmlkdWFsQ29udGFpbmVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHRhc2tDb250YWluZXI7XG5cbn1cblxuZnVuY3Rpb24gZGVsZXRlVGFzayhpKXtcbiAgICBmaW5hbEFycmF5W2luZGV4T2ZQcm9qZWN0RGlzcGxheWVkXS50YXNrcy5zcGxpY2UoaSwxKTtcbiAgICBET01jb25zdHJ1Y3RvcigpO1xufVxuLy8gQWxzbyB1c2VkIGZvciBhZGRpdGlvbiBvZiB0aGUgdGFzayB0byBwcm9qZWN0LlxuZnVuY3Rpb24gZWRpdFRhc2tET00oaSl7XG4gICAgY29uc3QgaW5kaXZpZHVhbENvbnRhaW5lciA9ICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgdGFzayR7aX1gKTtcbiAgICBpbmRpdmlkdWFsQ29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG4gICAgaW5kaXZpZHVhbENvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdpbmRpdmlkdWFsVGFza0NvbnRhaW5lcicpO1xuICAgIGluZGl2aWR1YWxDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZWRpdFRhc2tDb250YWluZXInKTtcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7XG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2VkaXRUYXNrQ29udGFpbmVyJyk7XG4gICAgY29udGFpbmVyLmlkPWB0YXNrZWRpdCR7aX1gO1xuXG4gICAgLy8gVXBwZXIgY29udGFpbmVyIG9mIHRoZSB0YXNrLlxuICAgIGNvbnN0IHVwcGVyQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgdXBwZXJDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnZmxleFN0cmV0Y2gnKTtcbiAgICAvLyBUaGUgbmFtZSBvZiB0YXNrIGFuZCBlZGl0IGFuZCBkZWxldGUgYnV0dG9uIGFyZSBhdmFpbGFibGUgaW4gdGhpcyBwYXJ0LlxuICAgIGNvbnN0IHRhc2tOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICB0YXNrTmFtZS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCd0ZXh0Jyk7XG4gICAgdGFza05hbWUuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsJ1Rhc2sgTmFtZScpXG4gICAgdGFza05hbWUuY2xhc3NMaXN0LmFkZCgnaW5wdXRUZXh0Jyk7XG4gICAgdGFza05hbWUucmVxdWlyZWQgPSB0cnVlO1xuICAgIC8vIEZvciBlZGl0IEJ1dHRvbi5cbiAgICBjb25zdCBzdWJtaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHN1Ym1pdC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCdzdWJtaXQnKTtcbiAgICBzdWJtaXQuaWQgPSBcInRhc2tTdWJtaXRcIjtcbiAgICBzdWJtaXQuaW5uZXJUZXh0ID0gXCJTdWJtaXRcIjtcbiAgICBzdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XG4gICAgICAgIFxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgdGhlRmxleCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHRoZUZsZXguY2xhc3NMaXN0LmFkZCgnZmxleEFyb3VuZCcpO1xuICAgIFxuICAgIGNvbnN0IHRpbWVPZlRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgdGltZU9mVGFzay5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCd0aW1lJyk7XG4gICAgdGltZU9mVGFzay5jbGFzc0xpc3QuYWRkKCd0aW1lJyk7XG4gICAgdGltZU9mVGFzay5yZXF1aXJlZCA9IHRydWU7XG5cbiAgICBjb25zdCBkYXRlT2ZUYXNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGRhdGVPZlRhc2suc2V0QXR0cmlidXRlKCd0eXBlJywnZGF0ZScpO1xuICAgIGRhdGVPZlRhc2suY2xhc3NMaXN0LmFkZCgnZGF0ZScpO1xuICAgIGRhdGVPZlRhc2sucmVxdWlyZWQgPSB0cnVlO1xuXG4gICAgLy8gQXBwZW5kaW5nIGRhdGUgYW5kIHRpbWUgYW5kIGJ1dHRvbnMuXG4gICAgdGhlRmxleC5hcHBlbmRDaGlsZCh0aW1lT2ZUYXNrKTtcbiAgICB0aGVGbGV4LmFwcGVuZENoaWxkKGRhdGVPZlRhc2spO1xuICAgIHRoZUZsZXguYXBwZW5kQ2hpbGQoc3VibWl0KTtcblxuICAgIHVwcGVyQ29udGFpbmVyLmFwcGVuZENoaWxkKHRhc2tOYW1lKTtcbiAgICB1cHBlckNvbnRhaW5lci5hcHBlbmRDaGlsZCh0aGVGbGV4KTtcbiAgICBpbmRpdmlkdWFsQ29udGFpbmVyLmFwcGVuZENoaWxkKHVwcGVyQ29udGFpbmVyKTtcbiAgICAvLyBBcHBlbmQgdGFzayBkZXRhaWwuXG4gICAgY29uc3QgcGFyYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgcGFyYS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCd0ZXh0Jyk7XG4gICAgcGFyYS5yZXF1aXJlZCA9IHRydWU7XG4gICAgcGFyYS5jbGFzc0xpc3QuYWRkKCd0YXNrRGV0YWlsJyk7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHBhcmEpO1xuICAgIGluZGl2aWR1YWxDb250YWluZXIuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcbn1cbi8vIENyZWF0ZSBkZWxldGVQcm9qZWN0IGZ1bmN0aW9uLlxuZnVuY3Rpb24gY3JlYXRlUHJvamVjdERPTShhcmcpeyBcbiAgICBjb25zdCBsaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGlzdC5jbGFzc0xpc3QuYWRkKCdmbGV4Q29sdW1uJyk7XG4gICAgaWYoYXJnLmxlbmd0aCA9PSAwKXtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBlbHNle1xuICAgIGZvcihsZXQgaT0wOyBpPGFyZy5sZW5ndGggOyBpKyspe1xuICAgICAgICBsZXQgY3VycmVudFByb2plY3QgPSBhcmdbaV07XG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcHJvamVjdC5jbGFzc0xpc3QuYWRkKCdmbGV4RW5kJyk7XG4gICAgICAgIHByb2plY3QuaWQ9YHByb2plY3Qke2l9YDtcbiAgICAgICAgY29uc3QgcHJvamVjdE5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgcHJvamVjdE5hbWUuaW5uZXJUZXh0ID0gYCR7Y3VycmVudFByb2plY3QudGl0bGV9YFxuICAgICAgICBjb25zdCBkZWxldGVCdG4gPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgZGVsZXRlQnRuLmNsYXNzTGlzdC5hZGQoJ2VuY2xvc2VkSU1HJyk7XG4gICAgICAgIGRlbGV0ZUJ0bi5zcmMgPSBkZWxldGVJTUc7XG4gICAgICAgIGRlbGV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcbiAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgZGVsZXRlUHJvamVjdChpKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmKHByb2plY3RCZWluZ0Rpc3BsYXllZCA9PSAwKXtcbiAgICAgICAgICAgIC8vIEJ5IERlZmF1bHRcbiAgICAgICAgICAgIHByb2plY3RCZWluZ0Rpc3BsYXllZCA9IGFyZ1tpXTtcbiAgICAgICAgICAgIGluZGV4T2ZQcm9qZWN0RGlzcGxheWVkID0gaTtcbiAgICAgICAgfVxuICAgICAgICBwcm9qZWN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgICAgICAgICAgcHJvamVjdEJlaW5nRGlzcGxheWVkID0gYXJnW2ldO1xuICAgICAgICAgICAgaW5kZXhPZlByb2plY3REaXNwbGF5ZWQgPSBpO1xuICAgICAgICAgICAgRE9NY29uc3RydWN0b3IoKTtcbiAgICAgICAgfSlcbiAgICAgICAgcHJvamVjdC5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZSk7XG4gICAgICAgIHByb2plY3QuYXBwZW5kQ2hpbGQoZGVsZXRlQnRuKTtcbiAgICAgICAgbGlzdC5hcHBlbmRDaGlsZChwcm9qZWN0KTtcbiAgICAgICAgfVxuXG4gICAgcmV0dXJuIGxpc3Q7XG4gICAgfVxufVxuZnVuY3Rpb24gZGVsZXRlUHJvamVjdChpKXtcbiAgICBmaW5hbEFycmF5LnNwbGljZShpLDEpO1xuICAgIGlmKGZpbmFsQXJyYXkubGVuZ3RoID09IDApe1xuICAgICAgICBmaW5hbEFycmF5ID0gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgdGl0bGUgOiBcIk5vIFByb2plY3RzIGluIHRhc2sgTGlzdFwiLFxuICAgICAgICAgICAgZGVzY3JpcHRpb24gOiBcIkNyZWF0ZSBhIFByb2plY3QgdG8gYWRkIHRhc2tzIHVuZGVyIGl0LlwiLFxuICAgICAgICAgICAgdGFza3MgOiBbXVxuICAgICAgICB9XG4gICAgXVxuICAgIH1lbHNle1xuICAgICAgICBwcm9qZWN0QmVpbmdEaXNwbGF5ZWQgPSB7XG4gICAgICAgICAgICB0aXRsZSA6IFwiU2VsZWN0IGEgcHJvamVjdC5cIixcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uIDogXCJQcm9qZWN0IERlc2NyaXB0aW9uIHdpbGwgYmUgc2hvd24gaGVyZS5cIixcbiAgICAgICAgICAgIHRhc2tzIDogW11cbiAgICAgICAgIH1cbiAgICB9XG4gICAgRE9NY29uc3RydWN0b3IoKTtcbn1cbmZ1bmN0aW9uIGFkZE5ld1Byb2plY3QoKXtcbiAgICBjb25zdCBsYXllciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxheWVyLmNsYXNzTGlzdC5hZGQoXCJibHVyTGF5ZXJcIik7XG4gICAgbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XG4gICAgICAgIGxheWVyLnJlbW92ZSgpO1xuICAgICAgICBhZGRMYXllci5yZW1vdmUoKTtcbiAgICB9KVxuICAgIGNvbnN0IGFkZExheWVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgYWRkTGF5ZXIuaWQgPSBcImFkZExheWVyXCI7XG5cblxuICAgIGNvbnN0IHN1YiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Zvcm0nKTtcbiAgICBzdWIuY2xhc3NMaXN0LmFkZCgnc3ViJyk7XG5cblxuICAgIGNvbnN0IHByb2pUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgcHJvalRpdGxlLnNldEF0dHJpYnV0ZSgndHlwZScsJ3RleHQnKTtcbiAgICBwcm9qVGl0bGUuc2V0QXR0cmlidXRlKCdwbGFjZWhvbGRlcicsJ05hbWUnKTtcbiAgICBwcm9qVGl0bGUucmVxdWlyZWQgPSB0cnVlO1xuICAgIGNvbnN0IHByb2pEZXNjcmliZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgcHJvakRlc2NyaWJlLnJlcXVpcmVkID0gdHJ1ZTtcbiAgICBwcm9qRGVzY3JpYmUuc2V0QXR0cmlidXRlKCd0eXBlJywndGV4dCcpO1xuICAgIHByb2pEZXNjcmliZS5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJywnRGVzY3JpYmUgdGhlIHByb2plY3QnKVxuICAgIGNvbnN0IHN1Ym1pdEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgc3VibWl0QnRuLnNldEF0dHJpYnV0ZSgndHlwZScsJ3N1Ym1pdCcpO1xuICAgIHN1Ym1pdEJ0bi5zZXRBdHRyaWJ1dGUoJ3RleHQnLCdBZGQgUHJvamVjdCcpO1xuICAgIHN1Ym1pdEJ0bi5zdHlsZS5jc3NUZXh0ID0gXCJiYWNrZ3JvdW5kLWNvbG9yOiBnb2xkO1wiXG4gICAgc3VibWl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywoKT0+e1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBpZihwcm9qVGl0bGUudmFsdWUgPT0gXCJcIiB8fCBwcm9qRGVzY3JpYmUudmFsdWUgPT0gXCJcIil7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgbGV0IG5ld1Byb2plY3QgPSBuZXcgcHJvamVjdENvbnN0cnVjdG9yKHByb2pUaXRsZS52YWx1ZSxwcm9qRGVzY3JpYmUudmFsdWUpO1xuICAgICAgICAgICAgZmluYWxBcnJheS5wdXNoKG5ld1Byb2plY3QpO1xuICAgICAgICAgICAgbGF5ZXIucmVtb3ZlKCk7XG4gICAgICAgICAgICBhZGRMYXllci5yZW1vdmUoKTtcbiAgICAgICAgICAgIERPTWNvbnN0cnVjdG9yKCk7XG4gICAgICAgIH1cbiAgICB9KVxuICAgIFxuICAgIHN1Yi5hcHBlbmRDaGlsZChwcm9qVGl0bGUpO1xuICAgIHN1Yi5hcHBlbmRDaGlsZChwcm9qRGVzY3JpYmUpO1xuICAgIHN1Yi5hcHBlbmRDaGlsZChzdWJtaXRCdG4pO1xuICAgIGFkZExheWVyLmFwcGVuZENoaWxkKHN1Yik7XG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdCT0RZJylbMF07XG4gICAgYm9keS5hcHBlbmRDaGlsZChsYXllcik7XG4gICAgYm9keS5hcHBlbmRDaGlsZChhZGRMYXllcik7XG59XG5mdW5jdGlvbiBhZGROZXdUYXNrKGFyZyl7XG4gICAgXG59XG5mdW5jdGlvbiBlZGl0UHJvamVjdChpKXtcbiAgICBjb25zdCBsYXllciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxheWVyLmNsYXNzTGlzdC5hZGQoXCJibHVyTGF5ZXJcIik7XG4gICAgbGF5ZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpPT57XG4gICAgICAgIGxheWVyLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpO1xuICAgICAgICBhZGRMYXllci5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKVxuICAgIH0pXG4gICAgY29uc3QgYWRkTGF5ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBhZGRMYXllci5pZCA9IFwiYWRkTGF5ZXJcIjtcblxuXG4gICAgY29uc3Qgc3ViID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuICAgIHN1Yi5jbGFzc0xpc3QuYWRkKCdzdWInKTtcblxuXG4gICAgY29uc3QgdGl0bGVPZlByb2plY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuICAgIHRpdGxlT2ZQcm9qZWN0LnNldEF0dHJpYnV0ZSgndHlwZScsJ3RleHQnKTtcbiAgICB0aXRsZU9mUHJvamVjdC5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJyxgJHtmaW5hbEFycmF5W2ldLnRpdGxlfWApO1xuICAgIHRpdGxlT2ZQcm9qZWN0LnJlcXVpcmVkID0gdHJ1ZTtcbiAgICBjb25zdCBkZXNjcmliZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgZGVzY3JpYmUucmVxdWlyZWQgPSB0cnVlO1xuICAgIGRlc2NyaWJlLnNldEF0dHJpYnV0ZSgndHlwZScsJ3RleHQnKTtcbiAgICBkZXNjcmliZS5zZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJyxgJHtmaW5hbEFycmF5W2ldLmRlc2NyaXB0aW9ufWApXG4gICAgY29uc3Qgc3VibWl0QnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcbiAgICBzdWJtaXRCdG4uc2V0QXR0cmlidXRlKCd0eXBlJywnc3VibWl0Jyk7XG4gICAgc3VibWl0QnRuLnNldEF0dHJpYnV0ZSgncGxhY2Vob2xkZXInLCdFZGl0IFByb2plY3QnKTtcbiAgICBzdWJtaXRCdG4uc3R5bGUuY3NzVGV4dCA9IFwiYmFja2dyb3VuZC1jb2xvcjogZ29sZDtcIlxuICAgIHN1Ym1pdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsKCk9PntcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgaWYodGl0bGVPZlByb2plY3QudmFsdWUgPT09ICcnIHx8IGRlc2NyaWJlLnZhbHVlID09PSAnJyl7XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgICAgZmluYWxBcnJheVtpXS50aXRsZSA9IHRpdGxlT2ZQcm9qZWN0LnZhbHVlO1xuICAgICAgICAgICAgZmluYWxBcnJheVtpXS5kZXNjcmlwdGlvbiA9IGRlc2NyaWJlLnZhbHVlO1xuICAgICAgICAgICAgbGF5ZXIucmVtb3ZlKCk7XG4gICAgICAgICAgICBhZGRMYXllci5yZW1vdmUoKTtcbiAgICAgICAgICAgIERPTWNvbnN0cnVjdG9yKCk7XG4gICAgICAgIH1cbiAgICB9KVxuICAgIFxuICAgIHN1Yi5hcHBlbmRDaGlsZCh0aXRsZU9mUHJvamVjdCk7XG4gICAgc3ViLmFwcGVuZENoaWxkKGRlc2NyaWJlKTtcbiAgICBzdWIuYXBwZW5kQ2hpbGQoc3VibWl0QnRuKTtcbiAgICBhZGRMYXllci5hcHBlbmRDaGlsZChzdWIpO1xuICAgIGNvbnN0IGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnQk9EWScpWzBdO1xuICAgIGJvZHkuYXBwZW5kQ2hpbGQobGF5ZXIpO1xuICAgIGJvZHkuYXBwZW5kQ2hpbGQoYWRkTGF5ZXIpO1xufVxuXG5leHBvcnR7IERPTWNvbnN0cnVjdG9yIGFzIHN0YXRpY0RPTX07IiwiLy8gSGFuZGxlcyB0aGUgc3RvcmFnZSBvZiB0YXNrcyBhbmQgUHJvamVjdHMuXG4vLyBVcGRhdGUgdGhlIGxvY2FsU3RvcmFnZSBBcnJheSBvbiBldmVyeSB1cGRhdGlvbi5cblxuXG4vLyBDaGVja3MgZm9yIGFscmVhZHkgc3RvcmVkIERhdGEuXG5mdW5jdGlvbiBnZXRGcm9tTG9jYWxTdG9yYWdlKCl7XG4gICAgaWYoc3RvcmFnZUF2YWlsYWJsZSgnbG9jYWxTdG9yYWdlJykpe1xuICAgICAgICBsZXQgcHJvamVjdCA9ICBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwcm9qZWN0QXJyYXknKSk7XG4gICAgICAgIGlmKCFwcm9qZWN0KXtcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogXCJUaGVPZGluUHJvamVjdFwiLFxuICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJMZWFybiBXZWIgRGV2ZWxvcG1lbnRcIixcbiAgICAgICAgICAgICAgICAgICAgdGFza3M6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTpcIkNyZWF0ZSBUby1Eby1MaXN0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogXCJkZC9tbS95eXl5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiBcIkNyZWF0ZSB1c2luZyBKYXZhc2NyaXB0IGFuZCBEYXRlLWZuc1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRpbWU6IFwiMTM6MDFcIlxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICByZXR1cm4gcHJvamVjdDtcbiAgICAgICAgfVxuICAgIH1lbHNle1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlRoZU9kaW5Qcm9qZWN0XCIsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiTGVhcm4gV2ViIERldmVsb3BtZW50XCIsXG4gICAgICAgICAgICAgICAgdGFza3M6IFtcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU6XCJDcmVhdGUgVG8tRG8tTGlzdFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogXCJkZC9tbS95eXl5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBkZXRhaWw6IFwiQ3JlYXRlIHVzaW5nIEphdmFzY3JpcHQgYW5kIERhdGUtZm5zXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aW1lOiBcIjEzOjAxXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXTtcbiAgICB9XG59XG5mdW5jdGlvbiBzdG9yZUluTG9jYWxTdG9yYWdlKHByb2plY3RBcnJheSl7XG4gICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Byb2plY3RBcnJheScsSlNPTi5zdHJpbmdpZnkocHJvamVjdEFycmF5KSk7XG59XG4vLyBTdG9yZXMgdGFzayB0byBBcnJheSBhbmQgYW5kIHB1c2ggaXQgdG8gbG9jYWxTdG9yYWdlLlxuZnVuY3Rpb24gc3RvcmVBcnJheShhcmcpe1xuc3RvcmVJbkxvY2FsU3RvcmFnZShhcmcpO1xufVxuXG4vL1RvIGNoZWNrIGZvciBsb2NhbCBzdG9yYWdlIGF2YWlsYWJpbGl0eS5cbmZ1bmN0aW9uIHN0b3JhZ2VBdmFpbGFibGUodHlwZSkge1xuICAgIHZhciBzdG9yYWdlO1xuICAgIHRyeSB7XG4gICAgICAgIHN0b3JhZ2UgPSB3aW5kb3dbdHlwZV07XG4gICAgICAgIHZhciB4ID0gJ19fc3RvcmFnZV90ZXN0X18nO1xuICAgICAgICBzdG9yYWdlLnNldEl0ZW0oeCwgeCk7XG4gICAgICAgIHN0b3JhZ2UucmVtb3ZlSXRlbSh4KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNhdGNoKGUpIHtcbiAgICAgICAgcmV0dXJuIGUgaW5zdGFuY2VvZiBET01FeGNlcHRpb24gJiYgKFxuICAgICAgICAgICAgLy8gZXZlcnl0aGluZyBleGNlcHQgRmlyZWZveFxuICAgICAgICAgICAgZS5jb2RlID09PSAyMiB8fFxuICAgICAgICAgICAgLy8gRmlyZWZveFxuICAgICAgICAgICAgZS5jb2RlID09PSAxMDE0IHx8XG4gICAgICAgICAgICAvLyB0ZXN0IG5hbWUgZmllbGQgdG9vLCBiZWNhdXNlIGNvZGUgbWlnaHQgbm90IGJlIHByZXNlbnRcbiAgICAgICAgICAgIC8vIGV2ZXJ5dGhpbmcgZXhjZXB0IEZpcmVmb3hcbiAgICAgICAgICAgIGUubmFtZSA9PT0gJ1F1b3RhRXhjZWVkZWRFcnJvcicgfHxcbiAgICAgICAgICAgIC8vIEZpcmVmb3hcbiAgICAgICAgICAgIGUubmFtZSA9PT0gJ05TX0VSUk9SX0RPTV9RVU9UQV9SRUFDSEVEJykgJiZcbiAgICAgICAgICAgIC8vIGFja25vd2xlZGdlIFF1b3RhRXhjZWVkZWRFcnJvciBvbmx5IGlmIHRoZXJlJ3Mgc29tZXRoaW5nIGFscmVhZHkgc3RvcmVkXG4gICAgICAgICAgICAoc3RvcmFnZSAmJiBzdG9yYWdlLmxlbmd0aCAhPT0gMCk7XG4gICAgfVxufVxuLy8gVXNlIHN0b3JlQXJyYXkgZnVuY3Rpb24gdG8gcHVzaCBuZXcgb2JqZWN0IHRvIHRoZSBhcnJheS5cbi8vIFVTZSB0YXNrSW5Mb2NhbFN0b3JhZ2UgdG8gZ2V0IERhdGEgdG8gcmVuZGVyIGluIERPTS5cblxuZXhwb3J0IHsgc3RvcmVBcnJheSAsIGdldEZyb21Mb2NhbFN0b3JhZ2UgfSIsImltcG9ydCB7IHN0YXRpY0RPTSB9IGZyb20gXCIuL0RPTWNvbnN0cnVjdG9yXCI7XG5zdGF0aWNET00oKTsiXSwic291cmNlUm9vdCI6IiJ9