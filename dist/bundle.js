(()=>{"use strict";var e={426:(e,n,t)=>{t.d(n,{Z:()=>d});var i=t(15),r=t.n(i),a=t(645),o=t.n(a)()(r());o.push([e.id,"body{\n    background-color: #333333;\n    color: #eeeeee;\n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(105, 100, 100);\n    color: whitesmoke;\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}\n.blurLayer{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0,0,0,0.8);\n        z-index: 2;\n        cursor:default;\n}\n#addLayer{\n    z-index: 5;\n    position: absolute;\n    cursor: default;\n    width: 50rem;\n    height: 50rem;\n    min-height: 700px;\n    margin: 0 auto;\n    background-color:#d6e0f0;\n    border-radius: 50px;\n    top: 50%;\n    left: 50%;\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.sub input{\n    text-align: center;\n    border-radius: 20px;\n    background-color: black;\n    color: white;\n    font-size: 2rem;\n    outline: 2px grey solid;\n    -webkit-appearance: none;\n    margin: 0;\n    -moz-appearance: textfield;\n}\n.sub{\n    height: 75%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: repeat( 6, 1fr);\n    grid-gap: 1rem;\n    padding: 10%;\n    text-align: center;\n    font-size: 2rem;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,cAAc;AAClB;AACA;IACI,cAAc;IACd,aAAa;IACb,YAAY;IACZ,qBAAqB;AACzB;AACA;IACI,4CAA4C;IAC5C,6BAA6B;AACjC;AACA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,KAAK;IACL,SAAS;IACT,OAAO;IACP,OAAO;AACX;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,uBAAuB;IACvB,uBAAuB;AAC3B;AACA;IACI,WAAW;IACX,yBAAyB;IACzB,MAAM;IACN,WAAW;IACX,aAAa;IACb,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,uBAAuB;IACvB,uBAAuB;AAC3B;AACA;IACI,6BAA6B;AACjC;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,yBAAyB;IACzB,WAAW;IACX,WAAW;IACX,mBAAmB;IACnB,iBAAiB;AACrB;AACA;IACI,oBAAoB;IACpB,yBAAyB;IACzB,iBAAiB;IACjB,OAAO;IACP,WAAW;IACX,YAAY;IACZ,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI,yBAAyB;AAC7B;AACA;IACI,uBAAuB;AAC3B;AACA;IACI,gBAAgB;IAChB,sBAAsB;AAC1B;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,yBAAyB;IACzB,mBAAmB;IACnB,UAAU;AACd;AACA;IACI,WAAW;IACX,oBAAoB;IACpB,eAAe;AACnB;AACA;IACI,SAAS;AACb;AACA;IACI,UAAU;IACV,YAAY;IACZ,cAAc;IACd,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;AACtB;AACA;IACI,aAAa;IACb,oBAAoB;IACpB,eAAe;AACnB;AACA;IACI,YAAY;IACZ,sBAAsB;AAC1B;AACA;IACI,SAAS;AACb;AACA;IACI,aAAa;IACb,mBAAmB;IACnB,6BAA6B;IAC7B,UAAU;AACd;AACA;IACI,sBAAsB;IACtB,eAAe;IACf,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,mBAAmB;GACpB,oBAAoB;AACvB;AACA;IACI,wBAAwB;AAC5B;AACA;IACI,aAAa;IACb,sBAAsB;IACtB,iBAAiB;IACjB,mBAAmB;IACnB,WAAW;AACf;AACA;IACI,UAAU;IACV,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;IACZ;AACJ;AACA;QACQ,eAAe;QACf,WAAW;QACX,YAAY;QACZ,MAAM;QACN,OAAO;QACP,QAAQ;QACR,SAAS;QACT,iCAAiC;QACjC,UAAU;QACV,cAAc;AACtB;AACA;IACI,UAAU;IACV,kBAAkB;IAClB,eAAe;IACf,YAAY;IACZ,aAAa;IACb,iBAAiB;IACjB,cAAc;IACd,wBAAwB;IACxB,mBAAmB;IACnB,QAAQ;IACR,SAAS;IACT,iDAAiD;IACjD,oDAAoD;IACpD,4CAA4C;AAChD;AACA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,eAAe;IACf,uBAAuB;IACvB,wBAAwB;IACxB,SAAS;IACT,0BAA0B;AAC9B;AACA;IACI,WAAW;IACX,cAAc;IACd,aAAa;IACb,mCAAmC;IACnC,cAAc;IACd,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB",sourcesContent:["body{\n    background-color: #333333;\n    color: #eeeeee;\n}\n.enclosedIMG{\n    height: 1.5rem;\n    width: 1.5rem;\n    padding: 1px;\n    display: inline-block;\n}\n.enclosedIMG:hover{\n    background-color: rgba(128, 128, 128, 0.493);\n    outline: 1px whitesmoke solid;\n}\n#wrapper{\n    position: fixed;\n    display: flex;\n    flex-direction: row;\n    top:0;\n    bottom: 0;\n    left: 0;\n    right:0;\n}\n.flexRow{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n.flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane{\n    padding: 3%;\n    background-color: #373c3f;\n    left:0;\n    width: 20vw;\n    height: 100vh;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#leftPane .flexColumn{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: flex-start;\n}\n#leftPane .flexEnd:hover{\n    outline: 2px solid whitesmoke;\n}\n#leftPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    background-color: #333333;\n    width: 100%;\n    padding: 5%;\n    border-radius: 10px;\n    margin-bottom: 5%;\n} \n#rightPane{\n    padding: 2% 5% 5% 5%;\n    background-color: #61676b;\n    color: whitesmoke;\n    right:0;\n    width: 80vw;\n    height: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n}\n#rightPane .flexStretch{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n}\n\n#rightPane .projects{\n    outline: 1px solid silver;\n}\n#rightPane .projects:hover{\n    outline: 1px solid gold;\n}\n#rightPane .projectDetail{\n    text-align: left;\n    align-self: flex-start;\n}\n#rightPane h1{\n    margin: 0;\n}\n#rightPane .flexEnd{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    align-items: center;\n    width: 50%;\n}\n#projectTitle{\n    color: gold;\n    font-family: cursive;\n    font-size: 4rem;\n}\n#projectDescription{\n    margin: 0;\n}\n#taskContainer{\n    width: 90%;\n    height: 100%;\n    overflow: auto;\n    margin-top: 2rem;\n    text-align: center;\n}\n.individualTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 0 5% 0 5%;\n}\n.taskName{\n    color: orange;\n    font-family: cursive;\n    font-size: 2rem;\n}\n#rightPane .flexColumn{\n    display:flex;\n    flex-direction: column;\n}\n.flexColumn h2{\n    margin: 0;\n}\n#rightPane .flexAround{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    width: 50%;\n}\n.taskDetail{\n    background-color: grey;\n    color: honeydew;\n    width: 95%;\n    padding: 1%;\n    border-radius: 20px;\n    text-overflow: auto;\n   word-wrap:break-word;\n}\n.hidden{\n    display: none !important;\n}\n.editTaskContainer{\n    display: flex;\n    flex-direction: column;\n    background: black;\n    border-radius: 20px;\n    padding: 2%;\n}\n#addTaskBtn{\n    width: 30%;\n    height: 2rem;\n    margin: 1%;\n    background-color: rgb(105, 100, 100);\n    color: whitesmoke;\n    border-radius: 5px;\n    border: none;\n    outline: 1px solid black\n}\n.blurLayer{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: rgba(0,0,0,0.8);\n        z-index: 2;\n        cursor:default;\n}\n#addLayer{\n    z-index: 5;\n    position: absolute;\n    cursor: default;\n    width: 50rem;\n    height: 50rem;\n    min-height: 700px;\n    margin: 0 auto;\n    background-color:#d6e0f0;\n    border-radius: 50px;\n    top: 50%;\n    left: 50%;\n    -moz-transform: translateX(-50%) translateY(-50%);\n    -webkit-transform: translateX(-50%) translateY(-50%);\n    transform: translateX(-50%) translateY(-50%);\n}\n.sub input{\n    text-align: center;\n    border-radius: 20px;\n    background-color: black;\n    color: white;\n    font-size: 2rem;\n    outline: 2px grey solid;\n    -webkit-appearance: none;\n    margin: 0;\n    -moz-appearance: textfield;\n}\n.sub{\n    height: 75%;\n    margin: 0 auto;\n    display: grid;\n    grid-template-rows: repeat( 6, 1fr);\n    grid-gap: 1rem;\n    padding: 10%;\n    text-align: center;\n    font-size: 2rem;\n}"],sourceRoot:""}]);const d=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t=e(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(e,t,i){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(i)for(var a=0;a<this.length;a++){var o=this[a][0];null!=o&&(r[o]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);i&&r[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),n.push(A))}},n}},15:e=>{function n(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,i=new Array(n);t<n;t++)i[t]=e[t];return i}e.exports=function(e){var t,i,r=(i=4,function(e){if(Array.isArray(e))return e}(t=e)||function(e,n){var t=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=t){var i,r,a=[],o=!0,d=!1;try{for(t=t.call(e);!(o=(i=t.next()).done)&&(a.push(i.value),!n||a.length!==n);o=!0);}catch(e){d=!0,r=e}finally{try{o||null==t.return||t.return()}finally{if(d)throw r}}return a}}(t,i)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var i=Object.prototype.toString.call(e).slice(8,-1);return"Object"===i&&e.constructor&&(i=e.constructor.name),"Map"===i||"Set"===i?Array.from(e):"Arguments"===i||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)?n(e,t):void 0}}(t,i)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[1],o=r[3];if("function"==typeof btoa){var d=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(d),c="/*# ".concat(A," */"),s=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[a].concat(s).concat([c]).join("\n")}return[a].join("\n")}},695:e=>{var n={};e.exports=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var a={},o=[],d=0;d<e.length;d++){var A=e[d],c=i.base?A[0]+i.base:A[0],s=a[c]||0,l="".concat(c," ").concat(s);a[c]=s+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3]};-1!==p?(n[p].references++,n[p].updater(u)):n.push({identifier:l,updater:r(u,i),references:1}),o.push(l)}return o}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=i(e=e||[],r=r||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var d=t(a[o]);n[d].references--}for(var A=i(e,r),c=0;c<a.length;c++){var s=t(a[c]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}a=A}}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n),n}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i=t.css,r=t.media,a=t.sourceMap;r?e.setAttribute("media",r):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(i,e)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},240:(e,n,t)=>{e.exports=t.p+"04c81ef01b7098abe8f1.png"},708:(e,n,t)=>{e.exports=t.p+"c952d52ab05717580cce.png"},242:(e,n,t)=>{e.exports=t.p+"5dac6acafe3e119da3ab.png"},59:(e,n,t)=>{e.exports=t.p+"75bd2749b182623e35b3.png"}},n={};function t(i){var r=n[i];if(void 0!==r)return r.exports;var a=n[i]={id:i,exports:{}};return e[i](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var i=n.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),(()=>{var e=t(379),n=t.n(e),i=t(795),r=t.n(i),a=t(695),o=t.n(a),d=t(216),A=t.n(d),c=t(426),s={styleTagTransform:function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}},setAttributes:function(e){var n=t.nc;n&&e.setAttribute("nonce",n)},insert:function(e){var n=o()("head");if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(e)}};s.domAPI=r(),s.insertStyleElement=A(),n()(c.Z,s),c.Z&&c.Z.locals&&c.Z.locals;var l=t(242),p=t(240),u=t(59),m=t(708);let C,f=0,h=[];function B(e,n){this.title=e,this.describe=n,this.tasks=[]}function g(){const e=document.getElementsByTagName("BODY")[0],n=document.createElement("div");n.id="wrapper";const t=function(e){const n=document.createElement("div");n.id="leftPane",n.innerHTML="";const t=document.createElement("div");t.classList.add("flexEnd");const i=document.createElement("div");i.innerText="Home";const r=document.createElement("div");r.innerText="0",t.appendChild(i),t.appendChild(r),n.appendChild(t);const a=document.createElement("div");a.classList.add("flexEnd");const o=document.createElement("div");o.innerText="Today";const d=document.createElement("div");d.innerText="0",a.appendChild(o),a.appendChild(d),n.appendChild(a);const A=document.createElement("div");A.classList.add("flexEnd");const c=document.createElement("div");c.innerText="This Week";const s=document.createElement("div");s.innerText="0",A.appendChild(c),A.appendChild(s),n.appendChild(A);const u=document.createElement("div");u.classList.add("flexColumn"),u.id="projectDisplay";const I=document.createElement("div");I.classList.add("flexEnd");const x=document.createElement("div");x.innerText="Projects";const v=document.createElement("div");v.classList.add("flexRow");const y=document.createElement("div");y.innerText="0";const w=new Image;w.src=l,w.addEventListener("click",(()=>{u.classList.toggle("hidden")})),w.classList.add("enclosedIMG"),I.appendChild(x),v.appendChild(y),v.appendChild(w),I.appendChild(v),n.appendChild(I);const k=document.createElement("div");k.addEventListener("click",(()=>{!function(){const e=document.createElement("div");e.classList.add("blurLayer"),e.addEventListener("click",(()=>{e.classList.add("hidden"),n.classList.add("hidden")}));const n=document.createElement("div");n.id="addLayer";const t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("placeholder","Name"),t.required=!0;const i=document.createElement("input");i.required=!0,i.setAttribute("type","text"),i.setAttribute("placeholder","Describe the project");const r=document.createElement("input");r.setAttribute("type","submit"),r.setAttribute("placeholder","Add Project"),r.style.cssText="background-color: gold;",r.addEventListener("click",(()=>{if(event.preventDefault(),""==t.value||""==i.value);else{let r=new B(t.value,i.value);h.push(r),console.log(h),e.classList.add("hidden"),n.classList.add("hidden"),g()}}));const a=document.createElement("form");a.classList.add("sub"),a.appendChild(t),a.appendChild(i),a.appendChild(r),n.appendChild(a);const o=document.getElementsByTagName("BODY")[0];o.appendChild(e),o.appendChild(n)}()})),k.classList.add("flexEnd");const E=document.createElement("div");E.innerText="Add Project";const L=new Image;L.src=p,L.classList.add("enclosedIMG"),k.appendChild(E),k.appendChild(L);const j=function(e){const n=document.createElement("div");n.classList.add("flexColumn");for(let t=0;t<e.length;t++){let i=e[t];const r=document.createElement("div");r.classList.add("flexEnd"),r.id=`project${t}`;const a=document.createElement("div");a.innerText=`${i.title}`;const o=new Image;o.classList.add("enclosedIMG"),o.src=m,o.addEventListener("click",(()=>{event.stopPropagation(),b(t)})),0==f&&(f=e[t],C=t),r.addEventListener("click",(()=>{f=e[t],C=t,g()})),r.appendChild(a),r.appendChild(o),n.appendChild(r)}return n}(e);return u.appendChild(k),u.appendChild(j),n.appendChild(u),n}(h);n.appendChild(t);const i=function(e){const n=document.createElement("div");console.log(e),n.id="rightPane",n.innerHTML="";const t=document.createElement("div");t.classList.add("flexColumn");const i=document.createElement("div");i.classList.add("flexStretch");const r=document.createElement("h1");r.innerText=`${e.title}`,r.id="projectTitle",i.appendChild(r);const a=new Image;f=={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]}||f=={title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}?a.classList.add("hidden"):a.classList.remove("hidden"),a.src=u,a.classList.add("enclosedIMG"),i.appendChild(a),t.appendChild(i);const o=document.createElement("p");o.innerText=`${e.description}`,o.id="projectDescription",t.appendChild(o),n.appendChild(t);const d=function(e){const n=document.createElement("div");n.id="taskContainer";const t=document.createElement("button");t.innerText="Add Task",f=={title:"Select a project.",description:"Project Description will be shown here.",tasks:[]}||f=={title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}?t.classList.add("hidden"):t.classList.remove("hidden"),t.id="addTaskBtn",t.addEventListener("click",(()=>{})),n.appendChild(t);for(let t=0;t<e.length;t++){let i=e[t];const r=document.createElement("div");r.classList.add("individualTaskContainer"),r.id=`task${t}`;const a=document.createElement("div");a.classList.add("flexStretch"),a.id=`${t}`;const o=document.createElement("h2");o.innerText=`${i.title}`,o.classList.add("taskName");const d=new Image;d.src=u,d.id=`${t}`,d.classList.add("enclosedIMG"),d.addEventListener("click",(()=>{x(t)}));const A=document.createElement("div");A.classList.add("flexAround");const c=new Image;c.src=m,c.id=`${t};`,c.classList.add("enclosedIMG"),c.addEventListener("click",(()=>{I(t)}));const s=document.createElement("div");s.classList.add("time"),s.innerText=`${i.time}`;const l=document.createElement("div");l.classList.add("date"),l.innerText=`${i.date}`,A.appendChild(s),A.appendChild(l),A.appendChild(d),A.appendChild(c),a.appendChild(o),a.appendChild(A),r.appendChild(a);const p=document.createElement("p");p.innerText=`${i.detail}`,p.classList.add("taskDetail"),r.appendChild(p),n.appendChild(r)}return n}(e.tasks);return n.appendChild(d),n}(f);var r;n.appendChild(i),e.appendChild(n),r=h,localStorage.clear(),localStorage.setItem("projectArray",JSON.stringify(r))}function I(e){h[C].tasks.splice(e,1),g()}function x(e){const n=document.getElementById(`task${e}`);n.innerHTML="",n.classList.remove("individualTaskContainer"),n.classList.add("editTaskContainer");const t=document.createElement("form");t.classList.add("editTaskContainer"),t.id=`taskedit${e}`;const i=document.createElement("div");i.classList.add("flexStretch");const r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("placeholder","Task Name"),r.classList.add("inputText"),r.required=!0;const a=document.createElement("input");a.setAttribute("type","submit"),a.id="taskSubmit",a.innerText="Submit",a.addEventListener("click",(()=>{}));const o=document.createElement("div");o.classList.add("flexAround");const d=document.createElement("input");d.setAttribute("type","time"),d.classList.add("time"),d.required=!0;const A=document.createElement("input");A.setAttribute("type","date"),A.classList.add("date"),A.required=!0,o.appendChild(d),o.appendChild(A),o.appendChild(a),i.appendChild(r),i.appendChild(o),n.appendChild(i);const c=document.createElement("input");c.setAttribute("type","text"),c.required=!0,c.classList.add("taskDetail"),t.appendChild(c),n.appendChild(t)}function b(e){h.splice(e,1),f=0==h.length?{title:"No Projects in task List",description:"Create a Project to add tasks under it.",tasks:[]}:{title:"Select a project.",description:"Project Description will be shown here.",tasks:[]},g()}h=function(){if(function(e){var n;try{n=window.localStorage;var t="__storage_test__";return n.setItem(t,t),n.removeItem(t),!0}catch(e){return e instanceof DOMException&&(22===e.code||1014===e.code||"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name)&&n&&0!==n.length}}()){return JSON.parse(localStorage.getItem("projectArray"))||[{title:"TheOdinProject",description:"Learn Web Development",tasks:[{title:"Create To-Do-List",date:"dd/mm/yyyy",detail:"Create using Javascript and Date-fns",time:"13:01"}]}]}return[{title:"TheOdinProject",description:"Learn Web Development",tasks:[{title:"Create To-Do-List",date:"dd/mm/yyyy",detail:"Create using Javascript and Date-fns",time:"13:01"}]}]}(),g()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,